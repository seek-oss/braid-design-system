// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Accordion 1`] = `
{
  exportType: component,
  props: {
    children: ReactNodeNoStrings
    data?: DataAttributeMap
    dividers?: boolean
    size?: 
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    space?: 
        | "large"
        | "medium"
        | "xlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", "medium" | "large" | "xlarge">
        | RequiredResponsiveArray<1 | 2 | 3 | 4, "medium" | "large" | "xlarge" | null>
    tone?: 
        | "neutral"
        | "secondary"
    weight?: 
        | "medium"
        | "regular"
        | "strong"
},
}
`;

exports[`AccordionItem 1`] = `
{
  exportType: component,
  props: {
    badge?: ReactElement<BadgeProps, string | JSXElementConstructor<any>>
    children: ReactNode
    data?: DataAttributeMap
    expanded?: boolean
    icon?: ReactElement<UseIconProps, string | JSXElementConstructor<any>>
    id: string
    label: string
    onToggle?: (expanded: boolean) => void
    size?: 
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    tone?: 
        | "neutral"
        | "secondary"
    weight?: 
        | "medium"
        | "regular"
        | "strong"
},
}
`;

exports[`Actions 1`] = `
{
  exportType: component,
  props: {
    children: ReactNodeNoStrings
    data?: DataAttributeMap
    size?: 
        | "small"
        | "standard"
},
}
`;

exports[`Alert 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    closeLabel?: string
    data?: DataAttributeMap
    id?: string
    onClose?: () => void
    tone?: 
        | "caution"
        | "critical"
        | "info"
        | "positive"
        | "promote"
},
}
`;

exports[`Autosuggest 1`] = `
{
  exportType: component,
  props: {
    aria-describedby?: string
    aria-label: string
    aria-labelledby: string
    autoFocus?: boolean
    automaticSelection?: boolean
    clearLabel?: string
    data?: DataAttributeMap
    description?: ReactNode
    disabled?: boolean
    hideSuggestionsOnSelection?: boolean
    icon?: ReactNode
    id: string
    label: ReactNode
    message?: ReactNode
    name?: string
    noSuggestionsMessage?: 
        | string
        | { title: string; description: string; }
    onBlur?: () => void
    onChange: (value: AutosuggestValue<Value>) => void
    onClear?: () => void
    onFocus?: () => void
    placeholder?: string
    ref?: 
        | (instance: HTMLInputElement | null) => void
        | RefObject<HTMLInputElement>
        | string
    required?: boolean
    reserveMessageSpace?: boolean
    scrollToTopOnMobile?: boolean
    secondaryLabel?: ReactNode
    secondaryMessage?: ReactNode
    showMobileBackdrop?: boolean
    suggestionHighlight?: 
        | "matching"
        | "remaining"
    suggestions: 
        | (value: AutosuggestValue<Value>) => Suggestions<Value>
        | Suggestions<Value>
    tertiaryLabel?: ReactNode
    tone?: 
        | "caution"
        | "critical"
        | "neutral"
        | "positive"
    translations?: {
        assistiveDescription: string
        noSuggestionsAvailableAnnouncement: string
        suggestionAutoSelectedAnnouncement: (suggestion: string) => string
        suggestionInstructions: string
        suggestionsAvailableAnnouncement: (suggestionCount: number) => string
    }
    type?: 
        | "search"
        | "text"
    value: AutosuggestValue<Value>
},
}
`;

exports[`Badge 1`] = `
{
  exportType: component,
  props: {
    aria-describedby?: string
    bleedY?: boolean
    children: 
        | (string | number)[]
        | number
        | string
    data?: DataAttributeMap
    id?: string
    ref?: 
        | (instance: HTMLSpanElement | null) => void
        | RefObject<HTMLSpanElement>
        | string
    tabIndex?: number
    title?: string
    tone?: 
        | "caution"
        | "critical"
        | "info"
        | "neutral"
        | "positive"
        | "promote"
    weight?: 
        | "regular"
        | "strong"
},
}
`;

exports[`Bleed 1`] = `
{
  exportType: component,
  props: {
    bottom?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
    children: ReactNode
    component?: 
        | "div"
        | "span"
    data?: DataAttributeMap
    horizontal?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
    left?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
    right?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
    space?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
    top?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
    vertical?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
},
}
`;

exports[`Box 1`] = `
{
  exportType: component,
  props: {
    about?: string
    accept?: string
    acceptCharset?: string
    accessKey?: string
    action?: string
    alignItems?: 
        | "center"
        | "flexEnd"
        | "flexStart"
        | ResponsiveArray<1 | 2 | 3 | 4, "center" | "flexStart" | "flexEnd" | null>
        | { mobile?: "center" | "flexStart" | "flexEnd" | undefined; tablet?: "center" | "flexStart" | "flexEnd" | undefined; desktop?: "center" | "flexStart" | "flexEnd" | undefined; wide?: "center" | ... 2 more ... | undefined; }
    allowFullScreen?: boolean
    allowTransparency?: boolean
    alt?: string
    aria-activedescendant?: string
    aria-atomic?: 
        | "false"
        | "true"
        | false
        | true
    aria-autocomplete?: 
        | "both"
        | "inline"
        | "list"
        | "none"
    aria-braillelabel?: string
    aria-brailleroledescription?: string
    aria-busy?: 
        | "false"
        | "true"
        | false
        | true
    aria-checked?: 
        | "false"
        | "mixed"
        | "true"
        | false
        | true
    aria-colcount?: number
    aria-colindex?: number
    aria-colindextext?: string
    aria-colspan?: number
    aria-controls?: string
    aria-current?: 
        | "date"
        | "false"
        | "location"
        | "page"
        | "step"
        | "time"
        | "true"
        | false
        | true
    aria-describedby?: string
    aria-description?: string
    aria-details?: string
    aria-disabled?: 
        | "false"
        | "true"
        | false
        | true
    aria-dropeffect?: 
        | "copy"
        | "execute"
        | "link"
        | "move"
        | "none"
        | "popup"
    aria-errormessage?: string
    aria-expanded?: 
        | "false"
        | "true"
        | false
        | true
    aria-flowto?: string
    aria-grabbed?: 
        | "false"
        | "true"
        | false
        | true
    aria-haspopup?: 
        | "dialog"
        | "false"
        | "grid"
        | "listbox"
        | "menu"
        | "tree"
        | "true"
        | false
        | true
    aria-hidden?: 
        | "false"
        | "true"
        | false
        | true
    aria-invalid?: 
        | "false"
        | "grammar"
        | "spelling"
        | "true"
        | false
        | true
    aria-keyshortcuts?: string
    aria-label?: string
    aria-labelledby?: string
    aria-level?: number
    aria-live?: 
        | "assertive"
        | "off"
        | "polite"
    aria-modal?: 
        | "false"
        | "true"
        | false
        | true
    aria-multiline?: 
        | "false"
        | "true"
        | false
        | true
    aria-multiselectable?: 
        | "false"
        | "true"
        | false
        | true
    aria-orientation?: 
        | "horizontal"
        | "vertical"
    aria-owns?: string
    aria-placeholder?: string
    aria-posinset?: number
    aria-pressed?: 
        | "false"
        | "mixed"
        | "true"
        | false
        | true
    aria-readonly?: 
        | "false"
        | "true"
        | false
        | true
    aria-relevant?: 
        | "additions removals"
        | "additions text"
        | "additions"
        | "all"
        | "removals additions"
        | "removals text"
        | "removals"
        | "text additions"
        | "text removals"
        | "text"
    aria-required?: 
        | "false"
        | "true"
        | false
        | true
    aria-roledescription?: string
    aria-rowcount?: number
    aria-rowindex?: number
    aria-rowindextext?: string
    aria-rowspan?: number
    aria-selected?: 
        | "false"
        | "true"
        | false
        | true
    aria-setsize?: number
    aria-sort?: 
        | "ascending"
        | "descending"
        | "none"
        | "other"
    aria-valuemax?: number
    aria-valuemin?: number
    aria-valuenow?: number
    aria-valuetext?: string
    as?: string
    async?: boolean
    autoCapitalize?: string
    autoComplete?: string
    autoCorrect?: string
    autoFocus?: boolean
    autoPlay?: boolean
    autoSave?: string
    background?: 
        | "body"
        | "brand"
        | "brandAccent"
        | "brandAccentActive"
        | "brandAccentHover"
        | "brandAccentSoft"
        | "brandAccentSoftActive"
        | "brandAccentSoftHover"
        | "caution"
        | "cautionLight"
        | "critical"
        | "criticalActive"
        | "criticalHover"
        | "criticalLight"
        | "criticalSoft"
        | "criticalSoftActive"
        | "criticalSoftHover"
        | "customDark"
        | "customLight"
        | "formAccent"
        | "formAccentActive"
        | "formAccentHover"
        | "formAccentSoft"
        | "formAccentSoftActive"
        | "formAccentSoftHover"
        | "info"
        | "infoLight"
        | "neutral"
        | "neutralActive"
        | "neutralHover"
        | "neutralLight"
        | "neutralSoft"
        | "neutralSoftActive"
        | "neutralSoftHover"
        | "positive"
        | "positiveLight"
        | "promote"
        | "promoteLight"
        | "surface"
    borderRadius?: 
        | "full"
        | "large"
        | "none"
        | "small"
        | "standard"
        | "xlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "small" | "large" | "xlarge" | "standard" | "none" | "full" | null>
        | { mobile?: "small" | "large" | "xlarge" | "standard" | "none" | "full" | undefined; tablet?: "small" | "large" | "xlarge" | "standard" | "none" | "full" | undefined; desktop?: "small" | ... 5 more ... | undefined; wide?: "small" | ... 5 more ... | undefined; }
    bottom?: 0
    boxShadow?: 
        | "borderBrandAccent"
        | "borderBrandAccentLarge"
        | "borderBrandAccentLight"
        | "borderBrandAccentLightLarge"
        | "borderCaution"
        | "borderCautionLight"
        | "borderCritical"
        | "borderCriticalLarge"
        | "borderCriticalLight"
        | "borderCriticalLightLarge"
        | "borderField"
        | "borderFormAccent"
        | "borderFormAccentLarge"
        | "borderFormAccentLight"
        | "borderFormAccentLightLarge"
        | "borderInfo"
        | "borderInfoLight"
        | "borderNeutral"
        | "borderNeutralInverted"
        | "borderNeutralInvertedLarge"
        | "borderNeutralLarge"
        | "borderNeutralLight"
        | "borderPositive"
        | "borderPositiveLight"
        | "borderPromote"
        | "borderPromoteLight"
        | "large"
        | "medium"
        | "outlineFocus"
        | "small"
    capture?: 
        | "environment"
        | "user"
        | false
        | true
    cellPadding?: 
        | number
        | string
    cellSpacing?: 
        | number
        | string
    challenge?: string
    charSet?: string
    checked?: boolean
    children?: ReactNode
    cite?: string
    classID?: string
    className?: ClassValue
    colSpan?: number
    color?: string
    cols?: number
    component?: 
        | "a"
        | "abbr"
        | "address"
        | "animate"
        | "animateMotion"
        | "animateTransform"
        | "area"
        | "article"
        | "aside"
        | "audio"
        | "b"
        | "base"
        | "bdi"
        | "bdo"
        | "big"
        | "blockquote"
        | "body"
        | "br"
        | "button"
        | "canvas"
        | "caption"
        | "center"
        | "circle"
        | "cite"
        | "clipPath"
        | "code"
        | "col"
        | "colgroup"
        | "data"
        | "datalist"
        | "dd"
        | "defs"
        | "del"
        | "desc"
        | "details"
        | "dfn"
        | "dialog"
        | "div"
        | "dl"
        | "dt"
        | "ellipse"
        | "em"
        | "embed"
        | "feBlend"
        | "feColorMatrix"
        | "feComponentTransfer"
        | "feComposite"
        | "feConvolveMatrix"
        | "feDiffuseLighting"
        | "feDisplacementMap"
        | "feDistantLight"
        | "feDropShadow"
        | "feFlood"
        | "feFuncA"
        | "feFuncB"
        | "feFuncG"
        | "feFuncR"
        | "feGaussianBlur"
        | "feImage"
        | "feMerge"
        | "feMergeNode"
        | "feMorphology"
        | "feOffset"
        | "fePointLight"
        | "feSpecularLighting"
        | "feSpotLight"
        | "feTile"
        | "feTurbulence"
        | "fieldset"
        | "figcaption"
        | "figure"
        | "filter"
        | "footer"
        | "foreignObject"
        | "form"
        | "g"
        | "h1"
        | "h2"
        | "h3"
        | "h4"
        | "h5"
        | "h6"
        | "head"
        | "header"
        | "hgroup"
        | "hr"
        | "html"
        | "i"
        | "iframe"
        | "image"
        | "img"
        | "input"
        | "ins"
        | "kbd"
        | "keygen"
        | "label"
        | "legend"
        | "li"
        | "line"
        | "linearGradient"
        | "link"
        | "main"
        | "map"
        | "mark"
        | "marker"
        | "mask"
        | "menu"
        | "menuitem"
        | "meta"
        | "metadata"
        | "meter"
        | "mpath"
        | "nav"
        | "noindex"
        | "noscript"
        | "object"
        | "ol"
        | "optgroup"
        | "option"
        | "output"
        | "p"
        | "param"
        | "path"
        | "pattern"
        | "picture"
        | "polygon"
        | "polyline"
        | "pre"
        | "progress"
        | "q"
        | "radialGradient"
        | "rect"
        | "rp"
        | "rt"
        | "ruby"
        | "s"
        | "samp"
        | "script"
        | "search"
        | "section"
        | "select"
        | "set"
        | "slot"
        | "small"
        | "source"
        | "span"
        | "stop"
        | "strong"
        | "style"
        | "sub"
        | "summary"
        | "sup"
        | "svg"
        | "switch"
        | "symbol"
        | "table"
        | "tbody"
        | "td"
        | "template"
        | "text"
        | "textPath"
        | "textarea"
        | "tfoot"
        | "th"
        | "thead"
        | "time"
        | "title"
        | "tr"
        | "track"
        | "tspan"
        | "u"
        | "ul"
        | "use"
        | "var"
        | "video"
        | "view"
        | "wbr"
        | "webview"
        | ComponentClass<any, any>
        | FunctionComponent<any>
    content?: string
    contentEditable?: 
        | "false"
        | "inherit"
        | "plaintext-only"
        | "true"
        | false
        | true
    contextMenu?: string
    controls?: boolean
    coords?: string
    crossOrigin?: 
        | ""
        | "anonymous"
        | "use-credentials"
    cursor?: 
        | "default"
        | "pointer"
    dangerouslySetInnerHTML?: { __html: string | TrustedHTML; }
    data?: DataAttributeMap
    datatype?: string
    dateTime?: string
    default?: boolean
    defaultChecked?: boolean
    defaultValue?: 
        | number
        | readonly string[]
        | string
    defer?: boolean
    dir?: string
    disabled?: boolean
    display?: 
        | "block"
        | "flex"
        | "inline"
        | "inlineBlock"
        | "none"
        | ResponsiveArray<1 | 2 | 3 | 4, "none" | "flex" | "block" | "inline" | "inlineBlock" | null>
        | { mobile?: "none" | "flex" | "block" | "inline" | "inlineBlock" | undefined; tablet?: "none" | "flex" | "block" | "inline" | "inlineBlock" | undefined; desktop?: "none" | "flex" | "block" | "inline" | "inlineBlock" | undefined; wide?: "none" | ... 4 more ... | undefined; }
    download?: any
    draggable?: 
        | "false"
        | "true"
        | false
        | true
    encType?: string
    flexDirection?: 
        | "column"
        | "columnReverse"
        | "row"
        | "rowReverse"
        | ResponsiveArray<1 | 2 | 3 | 4, "row" | "column" | "rowReverse" | "columnReverse" | null>
        | { mobile?: "row" | "column" | "rowReverse" | "columnReverse" | undefined; tablet?: "row" | "column" | "rowReverse" | "columnReverse" | undefined; desktop?: "row" | "column" | "rowReverse" | "columnReverse" | undefined; wide?: "row" | ... 3 more ... | undefined; }
    flexGrow?: 
        | 0
        | 1
        | ResponsiveArray<1 | 2 | 3 | 4, 0 | 1 | null>
        | { mobile?: 0 | 1 | undefined; tablet?: 0 | 1 | undefined; desktop?: 0 | 1 | undefined; wide?: 0 | 1 | undefined; }
    flexShrink?: 
        | 0
        | ResponsiveArray<1 | 2 | 3 | 4, 0 | null>
        | { mobile?: 0 | undefined; tablet?: 0 | undefined; desktop?: 0 | undefined; wide?: 0 | undefined; }
    flexWrap?: 
        | "nowrap"
        | "wrap"
        | ResponsiveArray<1 | 2 | 3 | 4, "wrap" | "nowrap" | null>
        | { mobile?: "wrap" | "nowrap" | undefined; tablet?: "wrap" | "nowrap" | undefined; desktop?: "wrap" | "nowrap" | undefined; wide?: "wrap" | "nowrap" | undefined; }
    form?: string
    formAction?: string
    formEncType?: string
    formMethod?: string
    formNoValidate?: boolean
    formTarget?: string
    frameBorder?: 
        | number
        | string
    headers?: string
    height?: 
        | "full"
        | "touchable"
    hidden?: boolean
    high?: number
    href?: string
    hrefLang?: string
    htmlFor?: string
    httpEquiv?: string
    id?: string
    inlist?: any
    inputMode?: 
        | "decimal"
        | "email"
        | "none"
        | "numeric"
        | "search"
        | "tel"
        | "text"
        | "url"
    inset?: 0
    integrity?: string
    is?: string
    itemID?: string
    itemProp?: string
    itemRef?: string
    itemScope?: boolean
    itemType?: string
    justifyContent?: 
        | "center"
        | "flexEnd"
        | "flexStart"
        | "spaceBetween"
        | ResponsiveArray<1 | 2 | 3 | 4, "center" | "flexStart" | "flexEnd" | "spaceBetween" | null>
        | { mobile?: "center" | "flexStart" | "flexEnd" | "spaceBetween" | undefined; tablet?: "center" | "flexStart" | "flexEnd" | "spaceBetween" | undefined; desktop?: "center" | "flexStart" | "flexEnd" | "spaceBetween" | undefined; wide?: "center" | ... 3 more ... | undefined; }
    keyParams?: string
    keyType?: string
    kind?: string
    label?: string
    lang?: string
    left?: 0
    list?: string
    loop?: boolean
    low?: number
    manifest?: string
    margin?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginBottom?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginHeight?: number
    marginLeft?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginRight?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginTop?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginWidth?: number
    marginX?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginY?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    max?: 
        | number
        | string
    maxLength?: number
    maxWidth?: 
        | "large"
        | "medium"
        | "small"
        | "xsmall"
    media?: string
    mediaGroup?: string
    method?: string
    min?: 
        | number
        | string
    minLength?: number
    minWidth?: 0
    multiple?: boolean
    muted?: boolean
    name?: string
    noValidate?: boolean
    nonce?: string
    onAbort?: ReactEventHandler<HTMLElement>
    onAbortCapture?: ReactEventHandler<HTMLElement>
    onAnimationEnd?: AnimationEventHandler<HTMLElement>
    onAnimationEndCapture?: AnimationEventHandler<HTMLElement>
    onAnimationIteration?: AnimationEventHandler<HTMLElement>
    onAnimationIterationCapture?: AnimationEventHandler<HTMLElement>
    onAnimationStart?: AnimationEventHandler<HTMLElement>
    onAnimationStartCapture?: AnimationEventHandler<HTMLElement>
    onAuxClick?: MouseEventHandler<HTMLElement>
    onAuxClickCapture?: MouseEventHandler<HTMLElement>
    onBeforeInput?: FormEventHandler<HTMLElement>
    onBeforeInputCapture?: FormEventHandler<HTMLElement>
    onBlur?: FocusEventHandler<HTMLElement>
    onBlurCapture?: FocusEventHandler<HTMLElement>
    onCanPlay?: ReactEventHandler<HTMLElement>
    onCanPlayCapture?: ReactEventHandler<HTMLElement>
    onCanPlayThrough?: ReactEventHandler<HTMLElement>
    onCanPlayThroughCapture?: ReactEventHandler<HTMLElement>
    onChange?: FormEventHandler<HTMLElement>
    onChangeCapture?: FormEventHandler<HTMLElement>
    onClick?: MouseEventHandler<HTMLElement>
    onClickCapture?: MouseEventHandler<HTMLElement>
    onCompositionEnd?: CompositionEventHandler<HTMLElement>
    onCompositionEndCapture?: CompositionEventHandler<HTMLElement>
    onCompositionStart?: CompositionEventHandler<HTMLElement>
    onCompositionStartCapture?: CompositionEventHandler<HTMLElement>
    onCompositionUpdate?: CompositionEventHandler<HTMLElement>
    onCompositionUpdateCapture?: CompositionEventHandler<HTMLElement>
    onContextMenu?: MouseEventHandler<HTMLElement>
    onContextMenuCapture?: MouseEventHandler<HTMLElement>
    onCopy?: ClipboardEventHandler<HTMLElement>
    onCopyCapture?: ClipboardEventHandler<HTMLElement>
    onCut?: ClipboardEventHandler<HTMLElement>
    onCutCapture?: ClipboardEventHandler<HTMLElement>
    onDoubleClick?: MouseEventHandler<HTMLElement>
    onDoubleClickCapture?: MouseEventHandler<HTMLElement>
    onDrag?: DragEventHandler<HTMLElement>
    onDragCapture?: DragEventHandler<HTMLElement>
    onDragEnd?: DragEventHandler<HTMLElement>
    onDragEndCapture?: DragEventHandler<HTMLElement>
    onDragEnter?: DragEventHandler<HTMLElement>
    onDragEnterCapture?: DragEventHandler<HTMLElement>
    onDragExit?: DragEventHandler<HTMLElement>
    onDragExitCapture?: DragEventHandler<HTMLElement>
    onDragLeave?: DragEventHandler<HTMLElement>
    onDragLeaveCapture?: DragEventHandler<HTMLElement>
    onDragOver?: DragEventHandler<HTMLElement>
    onDragOverCapture?: DragEventHandler<HTMLElement>
    onDragStart?: DragEventHandler<HTMLElement>
    onDragStartCapture?: DragEventHandler<HTMLElement>
    onDrop?: DragEventHandler<HTMLElement>
    onDropCapture?: DragEventHandler<HTMLElement>
    onDurationChange?: ReactEventHandler<HTMLElement>
    onDurationChangeCapture?: ReactEventHandler<HTMLElement>
    onEmptied?: ReactEventHandler<HTMLElement>
    onEmptiedCapture?: ReactEventHandler<HTMLElement>
    onEncrypted?: ReactEventHandler<HTMLElement>
    onEncryptedCapture?: ReactEventHandler<HTMLElement>
    onEnded?: ReactEventHandler<HTMLElement>
    onEndedCapture?: ReactEventHandler<HTMLElement>
    onError?: ReactEventHandler<HTMLElement>
    onErrorCapture?: ReactEventHandler<HTMLElement>
    onFocus?: FocusEventHandler<HTMLElement>
    onFocusCapture?: FocusEventHandler<HTMLElement>
    onGotPointerCapture?: PointerEventHandler<HTMLElement>
    onGotPointerCaptureCapture?: PointerEventHandler<HTMLElement>
    onInput?: FormEventHandler<HTMLElement>
    onInputCapture?: FormEventHandler<HTMLElement>
    onInvalid?: FormEventHandler<HTMLElement>
    onInvalidCapture?: FormEventHandler<HTMLElement>
    onKeyDown?: KeyboardEventHandler<HTMLElement>
    onKeyDownCapture?: KeyboardEventHandler<HTMLElement>
    onKeyPress?: KeyboardEventHandler<HTMLElement>
    onKeyPressCapture?: KeyboardEventHandler<HTMLElement>
    onKeyUp?: KeyboardEventHandler<HTMLElement>
    onKeyUpCapture?: KeyboardEventHandler<HTMLElement>
    onLoad?: ReactEventHandler<HTMLElement>
    onLoadCapture?: ReactEventHandler<HTMLElement>
    onLoadStart?: ReactEventHandler<HTMLElement>
    onLoadStartCapture?: ReactEventHandler<HTMLElement>
    onLoadedData?: ReactEventHandler<HTMLElement>
    onLoadedDataCapture?: ReactEventHandler<HTMLElement>
    onLoadedMetadata?: ReactEventHandler<HTMLElement>
    onLoadedMetadataCapture?: ReactEventHandler<HTMLElement>
    onLostPointerCapture?: PointerEventHandler<HTMLElement>
    onLostPointerCaptureCapture?: PointerEventHandler<HTMLElement>
    onMouseDown?: MouseEventHandler<HTMLElement>
    onMouseDownCapture?: MouseEventHandler<HTMLElement>
    onMouseEnter?: MouseEventHandler<HTMLElement>
    onMouseLeave?: MouseEventHandler<HTMLElement>
    onMouseMove?: MouseEventHandler<HTMLElement>
    onMouseMoveCapture?: MouseEventHandler<HTMLElement>
    onMouseOut?: MouseEventHandler<HTMLElement>
    onMouseOutCapture?: MouseEventHandler<HTMLElement>
    onMouseOver?: MouseEventHandler<HTMLElement>
    onMouseOverCapture?: MouseEventHandler<HTMLElement>
    onMouseUp?: MouseEventHandler<HTMLElement>
    onMouseUpCapture?: MouseEventHandler<HTMLElement>
    onPaste?: ClipboardEventHandler<HTMLElement>
    onPasteCapture?: ClipboardEventHandler<HTMLElement>
    onPause?: ReactEventHandler<HTMLElement>
    onPauseCapture?: ReactEventHandler<HTMLElement>
    onPlay?: ReactEventHandler<HTMLElement>
    onPlayCapture?: ReactEventHandler<HTMLElement>
    onPlaying?: ReactEventHandler<HTMLElement>
    onPlayingCapture?: ReactEventHandler<HTMLElement>
    onPointerCancel?: PointerEventHandler<HTMLElement>
    onPointerCancelCapture?: PointerEventHandler<HTMLElement>
    onPointerDown?: PointerEventHandler<HTMLElement>
    onPointerDownCapture?: PointerEventHandler<HTMLElement>
    onPointerEnter?: PointerEventHandler<HTMLElement>
    onPointerLeave?: PointerEventHandler<HTMLElement>
    onPointerMove?: PointerEventHandler<HTMLElement>
    onPointerMoveCapture?: PointerEventHandler<HTMLElement>
    onPointerOut?: PointerEventHandler<HTMLElement>
    onPointerOutCapture?: PointerEventHandler<HTMLElement>
    onPointerOver?: PointerEventHandler<HTMLElement>
    onPointerOverCapture?: PointerEventHandler<HTMLElement>
    onPointerUp?: PointerEventHandler<HTMLElement>
    onPointerUpCapture?: PointerEventHandler<HTMLElement>
    onProgress?: ReactEventHandler<HTMLElement>
    onProgressCapture?: ReactEventHandler<HTMLElement>
    onRateChange?: ReactEventHandler<HTMLElement>
    onRateChangeCapture?: ReactEventHandler<HTMLElement>
    onReset?: FormEventHandler<HTMLElement>
    onResetCapture?: FormEventHandler<HTMLElement>
    onResize?: ReactEventHandler<HTMLElement>
    onResizeCapture?: ReactEventHandler<HTMLElement>
    onScroll?: UIEventHandler<HTMLElement>
    onScrollCapture?: UIEventHandler<HTMLElement>
    onSeeked?: ReactEventHandler<HTMLElement>
    onSeekedCapture?: ReactEventHandler<HTMLElement>
    onSeeking?: ReactEventHandler<HTMLElement>
    onSeekingCapture?: ReactEventHandler<HTMLElement>
    onSelect?: ReactEventHandler<HTMLElement>
    onSelectCapture?: ReactEventHandler<HTMLElement>
    onStalled?: ReactEventHandler<HTMLElement>
    onStalledCapture?: ReactEventHandler<HTMLElement>
    onSubmit?: FormEventHandler<HTMLElement>
    onSubmitCapture?: FormEventHandler<HTMLElement>
    onSuspend?: ReactEventHandler<HTMLElement>
    onSuspendCapture?: ReactEventHandler<HTMLElement>
    onTimeUpdate?: ReactEventHandler<HTMLElement>
    onTimeUpdateCapture?: ReactEventHandler<HTMLElement>
    onTouchCancel?: TouchEventHandler<HTMLElement>
    onTouchCancelCapture?: TouchEventHandler<HTMLElement>
    onTouchEnd?: TouchEventHandler<HTMLElement>
    onTouchEndCapture?: TouchEventHandler<HTMLElement>
    onTouchMove?: TouchEventHandler<HTMLElement>
    onTouchMoveCapture?: TouchEventHandler<HTMLElement>
    onTouchStart?: TouchEventHandler<HTMLElement>
    onTouchStartCapture?: TouchEventHandler<HTMLElement>
    onTransitionEnd?: TransitionEventHandler<HTMLElement>
    onTransitionEndCapture?: TransitionEventHandler<HTMLElement>
    onVolumeChange?: ReactEventHandler<HTMLElement>
    onVolumeChangeCapture?: ReactEventHandler<HTMLElement>
    onWaiting?: ReactEventHandler<HTMLElement>
    onWaitingCapture?: ReactEventHandler<HTMLElement>
    onWheel?: WheelEventHandler<HTMLElement>
    onWheelCapture?: WheelEventHandler<HTMLElement>
    opacity?: 0
    open?: boolean
    optimum?: number
    outline?: "none"
    overflow?: 
        | "auto"
        | "hidden"
        | "scroll"
        | "visible"
    padding?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingBottom?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingLeft?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingRight?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingTop?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingX?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingY?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    pattern?: string
    placeholder?: string
    playsInline?: boolean
    pointerEvents?: "none"
    position?: 
        | "absolute"
        | "fixed"
        | "relative"
        | ResponsiveArray<1 | 2 | 3 | 4, "relative" | "absolute" | "fixed" | null>
        | { mobile?: "relative" | "absolute" | "fixed" | undefined; tablet?: "relative" | "absolute" | "fixed" | undefined; desktop?: "relative" | "absolute" | "fixed" | undefined; wide?: "relative" | "absolute" | "fixed" | undefined; }
    poster?: string
    prefix?: string
    preload?: string
    property?: string
    radioGroup?: string
    readOnly?: boolean
    ref?: 
        | (instance: HTMLElement | null) => void
        | RefObject<HTMLElement>
        | string
    rel?: string
    required?: boolean
    resource?: string
    results?: number
    rev?: string
    reversed?: boolean
    right?: 0
    role?: 
        | "alert"
        | "alertdialog"
        | "application"
        | "article"
        | "banner"
        | "button"
        | "cell"
        | "checkbox"
        | "columnheader"
        | "combobox"
        | "complementary"
        | "contentinfo"
        | "definition"
        | "dialog"
        | "directory"
        | "document"
        | "feed"
        | "figure"
        | "form"
        | "grid"
        | "gridcell"
        | "group"
        | "heading"
        | "img"
        | "link"
        | "list"
        | "listbox"
        | "listitem"
        | "log"
        | "main"
        | "marquee"
        | "math"
        | "menu"
        | "menubar"
        | "menuitem"
        | "menuitemcheckbox"
        | "menuitemradio"
        | "navigation"
        | "none"
        | "note"
        | "option"
        | "presentation"
        | "progressbar"
        | "radio"
        | "radiogroup"
        | "region"
        | "row"
        | "rowgroup"
        | "rowheader"
        | "scrollbar"
        | "search"
        | "searchbox"
        | "separator"
        | "slider"
        | "spinbutton"
        | "status"
        | "switch"
        | "tab"
        | "table"
        | "tablist"
        | "tabpanel"
        | "term"
        | "textbox"
        | "timer"
        | "toolbar"
        | "tooltip"
        | "tree"
        | "treegrid"
        | "treeitem"
        | string & {}
    rowSpan?: number
    rows?: number
    sandbox?: string
    scope?: string
    scoped?: boolean
    scrolling?: string
    seamless?: boolean
    security?: string
    selected?: boolean
    shape?: string
    size?: number
    sizes?: string
    slot?: string
    span?: number
    spellCheck?: 
        | "false"
        | "true"
        | false
        | true
    src?: string
    srcDoc?: string
    srcLang?: string
    srcSet?: string
    start?: number
    step?: 
        | number
        | string
    style?: CSSProperties
    summary?: string
    suppressContentEditableWarning?: boolean
    suppressHydrationWarning?: boolean
    tabIndex?: number
    target?: string
    textAlign?: 
        | "center"
        | "left"
        | "right"
        | ResponsiveArray<1 | 2 | 3 | 4, "left" | "right" | "center" | null>
        | { mobile?: "left" | "right" | "center" | undefined; tablet?: "left" | "right" | "center" | undefined; desktop?: "left" | "right" | "center" | undefined; wide?: "left" | "right" | "center" | undefined; }
    title?: string
    top?: 0
    transform?: { active?: "touchable" | undefined; }
    transition?: 
        | "fast"
        | "touchable"
    translate?: 
        | "no"
        | "yes"
    type?: string
    typeof?: string
    unselectable?: 
        | "off"
        | "on"
    useMap?: string
    userSelect?: "none"
    value?: 
        | number
        | readonly string[]
        | string
    vocab?: string
    width?: 
        | "full"
        | "touchable"
    wmode?: string
    wrap?: string
    zIndex?: 
        | "dropdown"
        | "dropdownBackdrop"
        | "modal"
        | "modalBackdrop"
        | "notification"
        | "sticky"
        | 0
        | 1
        | 2
},
}
`;

exports[`BoxRenderer 1`] = `
{
  exportType: component,
  props: {
    alignItems?: 
        | "center"
        | "flexEnd"
        | "flexStart"
        | ResponsiveArray<1 | 2 | 3 | 4, "center" | "flexStart" | "flexEnd" | null>
        | { mobile?: "center" | "flexStart" | "flexEnd" | undefined; tablet?: "center" | "flexStart" | "flexEnd" | undefined; desktop?: "center" | "flexStart" | "flexEnd" | undefined; wide?: "center" | ... 2 more ... | undefined; }
    background?: 
        | "body"
        | "brand"
        | "brandAccent"
        | "brandAccentActive"
        | "brandAccentHover"
        | "brandAccentSoft"
        | "brandAccentSoftActive"
        | "brandAccentSoftHover"
        | "caution"
        | "cautionLight"
        | "critical"
        | "criticalActive"
        | "criticalHover"
        | "criticalLight"
        | "criticalSoft"
        | "criticalSoftActive"
        | "criticalSoftHover"
        | "customDark"
        | "customLight"
        | "formAccent"
        | "formAccentActive"
        | "formAccentHover"
        | "formAccentSoft"
        | "formAccentSoftActive"
        | "formAccentSoftHover"
        | "info"
        | "infoLight"
        | "neutral"
        | "neutralActive"
        | "neutralHover"
        | "neutralLight"
        | "neutralSoft"
        | "neutralSoftActive"
        | "neutralSoftHover"
        | "positive"
        | "positiveLight"
        | "promote"
        | "promoteLight"
        | "surface"
    borderRadius?: 
        | "full"
        | "large"
        | "none"
        | "small"
        | "standard"
        | "xlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "small" | "large" | "xlarge" | "standard" | "none" | "full" | null>
        | { mobile?: "small" | "large" | "xlarge" | "standard" | "none" | "full" | undefined; tablet?: "small" | "large" | "xlarge" | "standard" | "none" | "full" | undefined; desktop?: "small" | ... 5 more ... | undefined; wide?: "small" | ... 5 more ... | undefined; }
    bottom?: 0
    boxShadow?: 
        | "borderBrandAccent"
        | "borderBrandAccentLarge"
        | "borderBrandAccentLight"
        | "borderBrandAccentLightLarge"
        | "borderCaution"
        | "borderCautionLight"
        | "borderCritical"
        | "borderCriticalLarge"
        | "borderCriticalLight"
        | "borderCriticalLightLarge"
        | "borderField"
        | "borderFormAccent"
        | "borderFormAccentLarge"
        | "borderFormAccentLight"
        | "borderFormAccentLightLarge"
        | "borderInfo"
        | "borderInfoLight"
        | "borderNeutral"
        | "borderNeutralInverted"
        | "borderNeutralInvertedLarge"
        | "borderNeutralLarge"
        | "borderNeutralLight"
        | "borderPositive"
        | "borderPositiveLight"
        | "borderPromote"
        | "borderPromoteLight"
        | "large"
        | "medium"
        | "outlineFocus"
        | "small"
    children: (className: string) => ReactElement<any, string | JSXElementConstructor<any>> | null
    className?: ClassValue
    component?: 
        | "a"
        | "abbr"
        | "address"
        | "animate"
        | "animateMotion"
        | "animateTransform"
        | "area"
        | "article"
        | "aside"
        | "audio"
        | "b"
        | "base"
        | "bdi"
        | "bdo"
        | "big"
        | "blockquote"
        | "body"
        | "br"
        | "button"
        | "canvas"
        | "caption"
        | "center"
        | "circle"
        | "cite"
        | "clipPath"
        | "code"
        | "col"
        | "colgroup"
        | "data"
        | "datalist"
        | "dd"
        | "defs"
        | "del"
        | "desc"
        | "details"
        | "dfn"
        | "dialog"
        | "div"
        | "dl"
        | "dt"
        | "ellipse"
        | "em"
        | "embed"
        | "feBlend"
        | "feColorMatrix"
        | "feComponentTransfer"
        | "feComposite"
        | "feConvolveMatrix"
        | "feDiffuseLighting"
        | "feDisplacementMap"
        | "feDistantLight"
        | "feDropShadow"
        | "feFlood"
        | "feFuncA"
        | "feFuncB"
        | "feFuncG"
        | "feFuncR"
        | "feGaussianBlur"
        | "feImage"
        | "feMerge"
        | "feMergeNode"
        | "feMorphology"
        | "feOffset"
        | "fePointLight"
        | "feSpecularLighting"
        | "feSpotLight"
        | "feTile"
        | "feTurbulence"
        | "fieldset"
        | "figcaption"
        | "figure"
        | "filter"
        | "footer"
        | "foreignObject"
        | "form"
        | "g"
        | "h1"
        | "h2"
        | "h3"
        | "h4"
        | "h5"
        | "h6"
        | "head"
        | "header"
        | "hgroup"
        | "hr"
        | "html"
        | "i"
        | "iframe"
        | "image"
        | "img"
        | "input"
        | "ins"
        | "kbd"
        | "keygen"
        | "label"
        | "legend"
        | "li"
        | "line"
        | "linearGradient"
        | "link"
        | "main"
        | "map"
        | "mark"
        | "marker"
        | "mask"
        | "menu"
        | "menuitem"
        | "meta"
        | "metadata"
        | "meter"
        | "mpath"
        | "nav"
        | "noindex"
        | "noscript"
        | "object"
        | "ol"
        | "optgroup"
        | "option"
        | "output"
        | "p"
        | "param"
        | "path"
        | "pattern"
        | "picture"
        | "polygon"
        | "polyline"
        | "pre"
        | "progress"
        | "q"
        | "radialGradient"
        | "rect"
        | "rp"
        | "rt"
        | "ruby"
        | "s"
        | "samp"
        | "script"
        | "search"
        | "section"
        | "select"
        | "set"
        | "slot"
        | "small"
        | "source"
        | "span"
        | "stop"
        | "strong"
        | "style"
        | "sub"
        | "summary"
        | "sup"
        | "svg"
        | "switch"
        | "symbol"
        | "table"
        | "tbody"
        | "td"
        | "template"
        | "text"
        | "textPath"
        | "textarea"
        | "tfoot"
        | "th"
        | "thead"
        | "time"
        | "title"
        | "tr"
        | "track"
        | "tspan"
        | "u"
        | "ul"
        | "use"
        | "var"
        | "video"
        | "view"
        | "wbr"
        | "webview"
    cursor?: 
        | "default"
        | "pointer"
    display?: 
        | "block"
        | "flex"
        | "inline"
        | "inlineBlock"
        | "none"
        | ResponsiveArray<1 | 2 | 3 | 4, "none" | "flex" | "block" | "inline" | "inlineBlock" | null>
        | { mobile?: "none" | "flex" | "block" | "inline" | "inlineBlock" | undefined; tablet?: "none" | "flex" | "block" | "inline" | "inlineBlock" | undefined; desktop?: "none" | "flex" | "block" | "inline" | "inlineBlock" | undefined; wide?: "none" | ... 4 more ... | undefined; }
    flexDirection?: 
        | "column"
        | "columnReverse"
        | "row"
        | "rowReverse"
        | ResponsiveArray<1 | 2 | 3 | 4, "row" | "column" | "rowReverse" | "columnReverse" | null>
        | { mobile?: "row" | "column" | "rowReverse" | "columnReverse" | undefined; tablet?: "row" | "column" | "rowReverse" | "columnReverse" | undefined; desktop?: "row" | "column" | "rowReverse" | "columnReverse" | undefined; wide?: "row" | ... 3 more ... | undefined; }
    flexGrow?: 
        | 0
        | 1
        | ResponsiveArray<1 | 2 | 3 | 4, 0 | 1 | null>
        | { mobile?: 0 | 1 | undefined; tablet?: 0 | 1 | undefined; desktop?: 0 | 1 | undefined; wide?: 0 | 1 | undefined; }
    flexShrink?: 
        | 0
        | ResponsiveArray<1 | 2 | 3 | 4, 0 | null>
        | { mobile?: 0 | undefined; tablet?: 0 | undefined; desktop?: 0 | undefined; wide?: 0 | undefined; }
    flexWrap?: 
        | "nowrap"
        | "wrap"
        | ResponsiveArray<1 | 2 | 3 | 4, "wrap" | "nowrap" | null>
        | { mobile?: "wrap" | "nowrap" | undefined; tablet?: "wrap" | "nowrap" | undefined; desktop?: "wrap" | "nowrap" | undefined; wide?: "wrap" | "nowrap" | undefined; }
    height?: 
        | "full"
        | "touchable"
    inset?: 0
    justifyContent?: 
        | "center"
        | "flexEnd"
        | "flexStart"
        | "spaceBetween"
        | ResponsiveArray<1 | 2 | 3 | 4, "center" | "flexStart" | "flexEnd" | "spaceBetween" | null>
        | { mobile?: "center" | "flexStart" | "flexEnd" | "spaceBetween" | undefined; tablet?: "center" | "flexStart" | "flexEnd" | "spaceBetween" | undefined; desktop?: "center" | "flexStart" | "flexEnd" | "spaceBetween" | undefined; wide?: "center" | ... 3 more ... | undefined; }
    left?: 0
    margin?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginBottom?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginLeft?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginRight?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginTop?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginX?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    marginY?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    maxWidth?: 
        | "large"
        | "medium"
        | "small"
        | "xsmall"
    minWidth?: 0
    opacity?: 0
    outline?: "none"
    overflow?: 
        | "auto"
        | "hidden"
        | "scroll"
        | "visible"
    padding?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingBottom?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingLeft?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingRight?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingTop?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingX?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    paddingY?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | ResponsiveArray<1 | 2 | 3 | 4, "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | null>
        | { mobile?: "gutter" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | "xxlarge" | "xxxlarge" | "none" | undefined; tablet?: "gutter" | "xxsmall" | "xsmall" | "small" | ... 6 more ... | undefined; desktop?: "gutter" | ... 9 more ... | undefined; wide?: "gutter" | ... 9 more ... | undefined; }
    pointerEvents?: "none"
    position?: 
        | "absolute"
        | "fixed"
        | "relative"
        | ResponsiveArray<1 | 2 | 3 | 4, "relative" | "absolute" | "fixed" | null>
        | { mobile?: "relative" | "absolute" | "fixed" | undefined; tablet?: "relative" | "absolute" | "fixed" | undefined; desktop?: "relative" | "absolute" | "fixed" | undefined; wide?: "relative" | "absolute" | "fixed" | undefined; }
    right?: 0
    textAlign?: 
        | "center"
        | "left"
        | "right"
        | ResponsiveArray<1 | 2 | 3 | 4, "left" | "right" | "center" | null>
        | { mobile?: "left" | "right" | "center" | undefined; tablet?: "left" | "right" | "center" | undefined; desktop?: "left" | "right" | "center" | undefined; wide?: "left" | "right" | "center" | undefined; }
    top?: 0
    transform?: { active?: "touchable" | undefined; }
    transition?: 
        | "fast"
        | "touchable"
    userSelect?: "none"
    width?: 
        | "full"
        | "touchable"
    zIndex?: 
        | "dropdown"
        | "dropdownBackdrop"
        | "modal"
        | "modalBackdrop"
        | "notification"
        | "sticky"
        | 0
        | 1
        | 2
},
}
`;

exports[`BraidPortal 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    container?: Element
},
}
`;

exports[`BraidProvider 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    linkComponent?: 
        | ComponentClass<LinkComponentProps, any>
        | FunctionComponent<LinkComponentProps>
        | { readonly __forwardRef__: ForwardRefExoticComponent<LinkComponentProps & RefAttributes<HTMLAnchorElement>>; }
    styleBody?: boolean
    theme: { vanillaTheme: string; name: string; displayName: string; legacy: boolean; background: { lightMode: string; darkMode: string; }; webFonts: { linkTag: string; }[]; space: { grid: number; space: { gutter: number; ... 7 more ...; xxxlarge: number; }; }; color: { ...; }; backgroundLightness: { ...; }; }
},
}
`;

exports[`BraidTestProvider 1`] = `
{
  exportType: component,
  props: {
    breakpoint?: 
        | "desktop"
        | "mobile"
        | "tablet"
        | "wide"
    children: ReactNode
    linkComponent?: 
        | ComponentClass<LinkComponentProps, any>
        | FunctionComponent<LinkComponentProps>
        | { readonly __forwardRef__: ForwardRefExoticComponent<LinkComponentProps & RefAttributes<HTMLAnchorElement>>; }
    themeName?: 
        | "apac"
        | "docs"
        | "seekBusiness"
        | "seekJobs"
        | "wireframe"
},
}
`;

exports[`Button 1`] = `
{
  exportType: component,
  props: {
    aria-controls?: string
    aria-describedby?: string
    aria-expanded?: 
        | "false"
        | "true"
        | false
        | true
    aria-haspopup?: 
        | "dialog"
        | "false"
        | "grid"
        | "listbox"
        | "menu"
        | "tree"
        | "true"
        | false
        | true
    aria-label?: string
    bleed?: boolean
    bleedY?: boolean
    children?: ReactNode
    data?: DataAttributeMap
    icon?: ReactElement<UseIconProps, string | JSXElementConstructor<any>>
    iconPosition?: 
        | "leading"
        | "trailing"
    id?: string
    loading?: boolean
    onClick?: MouseEventHandler<HTMLButtonElement>
    onKeyDown?: KeyboardEventHandler<HTMLButtonElement>
    onKeyUp?: KeyboardEventHandler<HTMLButtonElement>
    ref?: 
        | (instance: HTMLButtonElement | null) => void
        | RefObject<HTMLButtonElement>
        | string
    size?: 
        | "small"
        | "standard"
    tabIndex?: number
    tone?: 
        | "brandAccent"
        | "critical"
        | "formAccent"
        | "neutral"
    type?: 
        | "button"
        | "reset"
        | "submit"
    variant?: 
        | "ghost"
        | "soft"
        | "solid"
        | "transparent"
},
}
`;

exports[`ButtonIcon 1`] = `
{
  exportType: component,
  props: {
    aria-expanded?: 
        | "false"
        | "true"
        | false
        | true
    aria-haspopup?: 
        | "dialog"
        | "false"
        | "grid"
        | "listbox"
        | "menu"
        | "tree"
        | "true"
        | false
        | true
    bleed?: boolean
    data?: DataAttributeMap
    icon: ReactElement<UseIconProps, string | JSXElementConstructor<any>>
    id: string
    label: string
    onClick?: MouseEventHandler<HTMLButtonElement>
    onKeyDown?: KeyboardEventHandler<HTMLButtonElement>
    onKeyUp?: KeyboardEventHandler<HTMLButtonElement>
    onMouseDown?: MouseEventHandler<HTMLButtonElement>
    ref?: 
        | (instance: HTMLButtonElement | null) => void
        | RefObject<HTMLButtonElement>
        | string
    size?: 
        | "large"
        | "small"
        | "standard"
    tabIndex?: number
    tone?: 
        | "formAccent"
        | "neutral"
        | "secondary"
    tooltipPlacement?: 
        | "bottom"
        | "top"
    type?: 
        | "button"
        | "reset"
        | "submit"
    variant?: 
        | "soft"
        | "transparent"
},
}
`;

exports[`ButtonLink 1`] = `
{
  exportType: component,
  props: {
    about?: string
    accessKey?: string
    aria-activedescendant?: string
    aria-atomic?: 
        | "false"
        | "true"
        | false
        | true
    aria-autocomplete?: 
        | "both"
        | "inline"
        | "list"
        | "none"
    aria-braillelabel?: string
    aria-brailleroledescription?: string
    aria-busy?: 
        | "false"
        | "true"
        | false
        | true
    aria-checked?: 
        | "false"
        | "mixed"
        | "true"
        | false
        | true
    aria-colcount?: number
    aria-colindex?: number
    aria-colindextext?: string
    aria-colspan?: number
    aria-controls?: string
    aria-current?: 
        | "date"
        | "false"
        | "location"
        | "page"
        | "step"
        | "time"
        | "true"
        | false
        | true
    aria-describedby?: string
    aria-description?: string
    aria-details?: string
    aria-disabled?: 
        | "false"
        | "true"
        | false
        | true
    aria-dropeffect?: 
        | "copy"
        | "execute"
        | "link"
        | "move"
        | "none"
        | "popup"
    aria-errormessage?: string
    aria-expanded?: 
        | "false"
        | "true"
        | false
        | true
    aria-flowto?: string
    aria-grabbed?: 
        | "false"
        | "true"
        | false
        | true
    aria-haspopup?: 
        | "dialog"
        | "false"
        | "grid"
        | "listbox"
        | "menu"
        | "tree"
        | "true"
        | false
        | true
    aria-hidden?: 
        | "false"
        | "true"
        | false
        | true
    aria-invalid?: 
        | "false"
        | "grammar"
        | "spelling"
        | "true"
        | false
        | true
    aria-keyshortcuts?: string
    aria-label?: string
    aria-labelledby?: string
    aria-level?: number
    aria-live?: 
        | "assertive"
        | "off"
        | "polite"
    aria-modal?: 
        | "false"
        | "true"
        | false
        | true
    aria-multiline?: 
        | "false"
        | "true"
        | false
        | true
    aria-multiselectable?: 
        | "false"
        | "true"
        | false
        | true
    aria-orientation?: 
        | "horizontal"
        | "vertical"
    aria-owns?: string
    aria-placeholder?: string
    aria-posinset?: number
    aria-pressed?: 
        | "false"
        | "mixed"
        | "true"
        | false
        | true
    aria-readonly?: 
        | "false"
        | "true"
        | false
        | true
    aria-relevant?: 
        | "additions removals"
        | "additions text"
        | "additions"
        | "all"
        | "removals additions"
        | "removals text"
        | "removals"
        | "text additions"
        | "text removals"
        | "text"
    aria-required?: 
        | "false"
        | "true"
        | false
        | true
    aria-roledescription?: string
    aria-rowcount?: number
    aria-rowindex?: number
    aria-rowindextext?: string
    aria-rowspan?: number
    aria-selected?: 
        | "false"
        | "true"
        | false
        | true
    aria-setsize?: number
    aria-sort?: 
        | "ascending"
        | "descending"
        | "none"
        | "other"
    aria-valuemax?: number
    aria-valuemin?: number
    aria-valuenow?: number
    aria-valuetext?: string
    autoCapitalize?: string
    autoCorrect?: string
    autoFocus?: boolean
    autoSave?: string
    bleed?: boolean
    bleedY?: boolean
    children?: ReactNode
    color?: string
    content?: string
    contentEditable?: 
        | "false"
        | "inherit"
        | "plaintext-only"
        | "true"
        | false
        | true
    contextMenu?: string
    dangerouslySetInnerHTML?: { __html: string | TrustedHTML; }
    data?: DataAttributeMap
    datatype?: string
    defaultChecked?: boolean
    defaultValue?: 
        | number
        | readonly string[]
        | string
    dir?: string
    download?: any
    draggable?: 
        | "false"
        | "true"
        | false
        | true
    hidden?: boolean
    href: string
    hrefLang?: string
    icon?: ReactElement<UseIconProps, string | JSXElementConstructor<any>>
    iconPosition?: 
        | "leading"
        | "trailing"
    id?: string
    inlist?: any
    inputMode?: 
        | "decimal"
        | "email"
        | "none"
        | "numeric"
        | "search"
        | "tel"
        | "text"
        | "url"
    is?: string
    itemID?: string
    itemProp?: string
    itemRef?: string
    itemScope?: boolean
    itemType?: string
    lang?: string
    loading?: boolean
    media?: string
    nonce?: string
    onAbort?: ReactEventHandler<HTMLAnchorElement>
    onAbortCapture?: ReactEventHandler<HTMLAnchorElement>
    onAnimationEnd?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationEndCapture?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationIteration?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationIterationCapture?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationStart?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationStartCapture?: AnimationEventHandler<HTMLAnchorElement>
    onAuxClick?: MouseEventHandler<HTMLAnchorElement>
    onAuxClickCapture?: MouseEventHandler<HTMLAnchorElement>
    onBeforeInput?: FormEventHandler<HTMLAnchorElement>
    onBeforeInputCapture?: FormEventHandler<HTMLAnchorElement>
    onBlur?: FocusEventHandler<HTMLAnchorElement>
    onBlurCapture?: FocusEventHandler<HTMLAnchorElement>
    onCanPlay?: ReactEventHandler<HTMLAnchorElement>
    onCanPlayCapture?: ReactEventHandler<HTMLAnchorElement>
    onCanPlayThrough?: ReactEventHandler<HTMLAnchorElement>
    onCanPlayThroughCapture?: ReactEventHandler<HTMLAnchorElement>
    onChange?: FormEventHandler<HTMLAnchorElement>
    onChangeCapture?: FormEventHandler<HTMLAnchorElement>
    onClick?: MouseEventHandler<HTMLAnchorElement>
    onClickCapture?: MouseEventHandler<HTMLAnchorElement>
    onCompositionEnd?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionEndCapture?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionStart?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionStartCapture?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionUpdate?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionUpdateCapture?: CompositionEventHandler<HTMLAnchorElement>
    onContextMenu?: MouseEventHandler<HTMLAnchorElement>
    onContextMenuCapture?: MouseEventHandler<HTMLAnchorElement>
    onCopy?: ClipboardEventHandler<HTMLAnchorElement>
    onCopyCapture?: ClipboardEventHandler<HTMLAnchorElement>
    onCut?: ClipboardEventHandler<HTMLAnchorElement>
    onCutCapture?: ClipboardEventHandler<HTMLAnchorElement>
    onDoubleClick?: MouseEventHandler<HTMLAnchorElement>
    onDoubleClickCapture?: MouseEventHandler<HTMLAnchorElement>
    onDrag?: DragEventHandler<HTMLAnchorElement>
    onDragCapture?: DragEventHandler<HTMLAnchorElement>
    onDragEnd?: DragEventHandler<HTMLAnchorElement>
    onDragEndCapture?: DragEventHandler<HTMLAnchorElement>
    onDragEnter?: DragEventHandler<HTMLAnchorElement>
    onDragEnterCapture?: DragEventHandler<HTMLAnchorElement>
    onDragExit?: DragEventHandler<HTMLAnchorElement>
    onDragExitCapture?: DragEventHandler<HTMLAnchorElement>
    onDragLeave?: DragEventHandler<HTMLAnchorElement>
    onDragLeaveCapture?: DragEventHandler<HTMLAnchorElement>
    onDragOver?: DragEventHandler<HTMLAnchorElement>
    onDragOverCapture?: DragEventHandler<HTMLAnchorElement>
    onDragStart?: DragEventHandler<HTMLAnchorElement>
    onDragStartCapture?: DragEventHandler<HTMLAnchorElement>
    onDrop?: DragEventHandler<HTMLAnchorElement>
    onDropCapture?: DragEventHandler<HTMLAnchorElement>
    onDurationChange?: ReactEventHandler<HTMLAnchorElement>
    onDurationChangeCapture?: ReactEventHandler<HTMLAnchorElement>
    onEmptied?: ReactEventHandler<HTMLAnchorElement>
    onEmptiedCapture?: ReactEventHandler<HTMLAnchorElement>
    onEncrypted?: ReactEventHandler<HTMLAnchorElement>
    onEncryptedCapture?: ReactEventHandler<HTMLAnchorElement>
    onEnded?: ReactEventHandler<HTMLAnchorElement>
    onEndedCapture?: ReactEventHandler<HTMLAnchorElement>
    onError?: ReactEventHandler<HTMLAnchorElement>
    onErrorCapture?: ReactEventHandler<HTMLAnchorElement>
    onFocus?: FocusEventHandler<HTMLAnchorElement>
    onFocusCapture?: FocusEventHandler<HTMLAnchorElement>
    onGotPointerCapture?: PointerEventHandler<HTMLAnchorElement>
    onGotPointerCaptureCapture?: PointerEventHandler<HTMLAnchorElement>
    onInput?: FormEventHandler<HTMLAnchorElement>
    onInputCapture?: FormEventHandler<HTMLAnchorElement>
    onInvalid?: FormEventHandler<HTMLAnchorElement>
    onInvalidCapture?: FormEventHandler<HTMLAnchorElement>
    onKeyDown?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyDownCapture?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyPress?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyPressCapture?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyUp?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyUpCapture?: KeyboardEventHandler<HTMLAnchorElement>
    onLoad?: ReactEventHandler<HTMLAnchorElement>
    onLoadCapture?: ReactEventHandler<HTMLAnchorElement>
    onLoadStart?: ReactEventHandler<HTMLAnchorElement>
    onLoadStartCapture?: ReactEventHandler<HTMLAnchorElement>
    onLoadedData?: ReactEventHandler<HTMLAnchorElement>
    onLoadedDataCapture?: ReactEventHandler<HTMLAnchorElement>
    onLoadedMetadata?: ReactEventHandler<HTMLAnchorElement>
    onLoadedMetadataCapture?: ReactEventHandler<HTMLAnchorElement>
    onLostPointerCapture?: PointerEventHandler<HTMLAnchorElement>
    onLostPointerCaptureCapture?: PointerEventHandler<HTMLAnchorElement>
    onMouseDown?: MouseEventHandler<HTMLAnchorElement>
    onMouseDownCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseEnter?: MouseEventHandler<HTMLAnchorElement>
    onMouseLeave?: MouseEventHandler<HTMLAnchorElement>
    onMouseMove?: MouseEventHandler<HTMLAnchorElement>
    onMouseMoveCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseOut?: MouseEventHandler<HTMLAnchorElement>
    onMouseOutCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseOver?: MouseEventHandler<HTMLAnchorElement>
    onMouseOverCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseUp?: MouseEventHandler<HTMLAnchorElement>
    onMouseUpCapture?: MouseEventHandler<HTMLAnchorElement>
    onPaste?: ClipboardEventHandler<HTMLAnchorElement>
    onPasteCapture?: ClipboardEventHandler<HTMLAnchorElement>
    onPause?: ReactEventHandler<HTMLAnchorElement>
    onPauseCapture?: ReactEventHandler<HTMLAnchorElement>
    onPlay?: ReactEventHandler<HTMLAnchorElement>
    onPlayCapture?: ReactEventHandler<HTMLAnchorElement>
    onPlaying?: ReactEventHandler<HTMLAnchorElement>
    onPlayingCapture?: ReactEventHandler<HTMLAnchorElement>
    onPointerCancel?: PointerEventHandler<HTMLAnchorElement>
    onPointerCancelCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerDown?: PointerEventHandler<HTMLAnchorElement>
    onPointerDownCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerEnter?: PointerEventHandler<HTMLAnchorElement>
    onPointerLeave?: PointerEventHandler<HTMLAnchorElement>
    onPointerMove?: PointerEventHandler<HTMLAnchorElement>
    onPointerMoveCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerOut?: PointerEventHandler<HTMLAnchorElement>
    onPointerOutCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerOver?: PointerEventHandler<HTMLAnchorElement>
    onPointerOverCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerUp?: PointerEventHandler<HTMLAnchorElement>
    onPointerUpCapture?: PointerEventHandler<HTMLAnchorElement>
    onProgress?: ReactEventHandler<HTMLAnchorElement>
    onProgressCapture?: ReactEventHandler<HTMLAnchorElement>
    onRateChange?: ReactEventHandler<HTMLAnchorElement>
    onRateChangeCapture?: ReactEventHandler<HTMLAnchorElement>
    onReset?: FormEventHandler<HTMLAnchorElement>
    onResetCapture?: FormEventHandler<HTMLAnchorElement>
    onResize?: ReactEventHandler<HTMLAnchorElement>
    onResizeCapture?: ReactEventHandler<HTMLAnchorElement>
    onScroll?: UIEventHandler<HTMLAnchorElement>
    onScrollCapture?: UIEventHandler<HTMLAnchorElement>
    onSeeked?: ReactEventHandler<HTMLAnchorElement>
    onSeekedCapture?: ReactEventHandler<HTMLAnchorElement>
    onSeeking?: ReactEventHandler<HTMLAnchorElement>
    onSeekingCapture?: ReactEventHandler<HTMLAnchorElement>
    onSelect?: ReactEventHandler<HTMLAnchorElement>
    onSelectCapture?: ReactEventHandler<HTMLAnchorElement>
    onStalled?: ReactEventHandler<HTMLAnchorElement>
    onStalledCapture?: ReactEventHandler<HTMLAnchorElement>
    onSubmit?: FormEventHandler<HTMLAnchorElement>
    onSubmitCapture?: FormEventHandler<HTMLAnchorElement>
    onSuspend?: ReactEventHandler<HTMLAnchorElement>
    onSuspendCapture?: ReactEventHandler<HTMLAnchorElement>
    onTimeUpdate?: ReactEventHandler<HTMLAnchorElement>
    onTimeUpdateCapture?: ReactEventHandler<HTMLAnchorElement>
    onTouchCancel?: TouchEventHandler<HTMLAnchorElement>
    onTouchCancelCapture?: TouchEventHandler<HTMLAnchorElement>
    onTouchEnd?: TouchEventHandler<HTMLAnchorElement>
    onTouchEndCapture?: TouchEventHandler<HTMLAnchorElement>
    onTouchMove?: TouchEventHandler<HTMLAnchorElement>
    onTouchMoveCapture?: TouchEventHandler<HTMLAnchorElement>
    onTouchStart?: TouchEventHandler<HTMLAnchorElement>
    onTouchStartCapture?: TouchEventHandler<HTMLAnchorElement>
    onTransitionEnd?: TransitionEventHandler<HTMLAnchorElement>
    onTransitionEndCapture?: TransitionEventHandler<HTMLAnchorElement>
    onVolumeChange?: ReactEventHandler<HTMLAnchorElement>
    onVolumeChangeCapture?: ReactEventHandler<HTMLAnchorElement>
    onWaiting?: ReactEventHandler<HTMLAnchorElement>
    onWaitingCapture?: ReactEventHandler<HTMLAnchorElement>
    onWheel?: WheelEventHandler<HTMLAnchorElement>
    onWheelCapture?: WheelEventHandler<HTMLAnchorElement>
    ping?: string
    prefix?: string
    property?: string
    radioGroup?: string
    ref?: 
        | (instance: HTMLAnchorElement | null) => void
        | RefObject<HTMLAnchorElement>
        | string
    referrerPolicy?: 
        | ""
        | "no-referrer"
        | "no-referrer-when-downgrade"
        | "origin"
        | "origin-when-cross-origin"
        | "same-origin"
        | "strict-origin"
        | "strict-origin-when-cross-origin"
        | "unsafe-url"
    rel?: string
    resource?: string
    results?: number
    rev?: string
    role?: 
        | "alert"
        | "alertdialog"
        | "application"
        | "article"
        | "banner"
        | "button"
        | "cell"
        | "checkbox"
        | "columnheader"
        | "combobox"
        | "complementary"
        | "contentinfo"
        | "definition"
        | "dialog"
        | "directory"
        | "document"
        | "feed"
        | "figure"
        | "form"
        | "grid"
        | "gridcell"
        | "group"
        | "heading"
        | "img"
        | "link"
        | "list"
        | "listbox"
        | "listitem"
        | "log"
        | "main"
        | "marquee"
        | "math"
        | "menu"
        | "menubar"
        | "menuitem"
        | "menuitemcheckbox"
        | "menuitemradio"
        | "navigation"
        | "none"
        | "note"
        | "option"
        | "presentation"
        | "progressbar"
        | "radio"
        | "radiogroup"
        | "region"
        | "row"
        | "rowgroup"
        | "rowheader"
        | "scrollbar"
        | "search"
        | "searchbox"
        | "separator"
        | "slider"
        | "spinbutton"
        | "status"
        | "switch"
        | "tab"
        | "table"
        | "tablist"
        | "tabpanel"
        | "term"
        | "textbox"
        | "timer"
        | "toolbar"
        | "tooltip"
        | "tree"
        | "treegrid"
        | "treeitem"
        | string & {}
    security?: string
    size?: 
        | "small"
        | "standard"
    slot?: string
    spellCheck?: 
        | "false"
        | "true"
        | false
        | true
    suppressContentEditableWarning?: boolean
    suppressHydrationWarning?: boolean
    tabIndex?: number
    target?: 
        | "_blank"
        | "_parent"
        | "_self"
        | "_top"
        | string & {}
    title?: string
    tone?: 
        | "brandAccent"
        | "critical"
        | "formAccent"
        | "neutral"
    translate?: 
        | "no"
        | "yes"
    type?: string
    typeof?: string
    unselectable?: 
        | "off"
        | "on"
    variant?: 
        | "ghost"
        | "soft"
        | "solid"
        | "transparent"
    vocab?: string
},
}
`;

exports[`Card 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    component?: 
        | "article"
        | "aside"
        | "details"
        | "div"
        | "main"
        | "section"
    data?: DataAttributeMap
    height?: 
        | "content"
        | "full"
    rounded?: boolean
    roundedAbove?: 
        | "desktop"
        | "mobile"
        | "tablet"
    tone?: 
        | "formAccent"
        | "promote"
},
}
`;

exports[`Checkbox 1`] = `
{
  exportType: component,
  props: {
    aria-describedby?: string
    badge?: ReactElement<BadgeProps, string | JSXElementConstructor<any>>
    checked: 
        | "mixed"
        | boolean[]
        | false
        | true
    children?: ReactNode
    data?: DataAttributeMap
    description?: ReactNode
    disabled?: boolean
    id: string
    label: ReactNode
    message?: ReactNode
    name?: string
    onChange: FormEventHandler<HTMLInputElement>
    ref?: 
        | (instance: HTMLInputElement | null) => void
        | RefObject<HTMLInputElement>
        | string
    required?: boolean
    reserveMessageSpace?: boolean
    size?: 
        | "small"
        | "standard"
    tone?: 
        | "critical"
        | "neutral"
    value?: 
        | number
        | readonly string[]
        | string
},
}
`;

exports[`CheckboxStandalone 1`] = `
{
  exportType: component,
  props: {
    aria-describedby?: string
    aria-label?: string
    aria-labelledby?: string
    checked: 
        | "mixed"
        | boolean[]
        | false
        | true
    data?: DataAttributeMap
    disabled?: boolean
    id: string
    name?: string
    onChange: FormEventHandler<HTMLInputElement>
    ref?: 
        | (instance: HTMLInputElement | null) => void
        | RefObject<HTMLInputElement>
        | string
    required?: boolean
    size?: 
        | "small"
        | "standard"
    tone?: 
        | "critical"
        | "neutral"
    value?: 
        | number
        | readonly string[]
        | string
},
}
`;

exports[`Column 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    data?: DataAttributeMap
    hideAbove?: 
        | "desktop"
        | "mobile"
        | "tablet"
    hideBelow?: 
        | "desktop"
        | "tablet"
        | "wide"
    width?: 
        | "1/2"
        | "1/3"
        | "1/4"
        | "1/5"
        | "2/3"
        | "2/5"
        | "3/4"
        | "3/5"
        | "4/5"
        | "content"
},
}
`;

exports[`Columns 1`] = `
{
  exportType: component,
  props: {
    align?: 
        | "center"
        | "left"
        | "right"
        | Partial<Record<"mobile" | "tablet" | "desktop" | "wide", Align>>
        | ResponsiveArray<1 | 2 | 3 | 4, Align | null>
    alignY?: 
        | "bottom"
        | "center"
        | "top"
        | Partial<Record<"mobile" | "tablet" | "desktop" | "wide", AlignY>>
        | ResponsiveArray<1 | 2 | 3 | 4, AlignY | null>
    children: 
        | (ReactElement<ColumnProps, string | JSXElementConstructor<any>> | null)[]
        | ReactElement<ColumnProps, string | JSXElementConstructor<any>>
    collapseBelow?: 
        | "desktop"
        | "tablet"
        | "wide"
    component?: 
        | "div"
        | "span"
    data?: DataAttributeMap
    reverse?: boolean
    space: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
},
}
`;

exports[`ContentBlock 1`] = `
{
  exportType: component,
  props: {
    align?: 
        | "center"
        | "left"
    children: ReactNode
    data?: DataAttributeMap
    width?: 
        | "large"
        | "medium"
        | "small"
        | "xsmall"
},
}
`;

exports[`Dialog 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    closeLabel?: string
    data?: DataAttributeMap
    description?: ReactNodeNoStrings
    id: string
    illustration?: ReactNodeNoStrings
    onClose: (openState: false) => false | void
    open: boolean
    title: string
    width?: 
        | "content"
        | "large"
        | "medium"
        | "small"
        | "xsmall"
},
}
`;

exports[`Disclosure 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    collapseLabel?: string
    data?: DataAttributeMap
    expandLabel: string
    expanded?: boolean
    id: string
    onToggle?: (expanded: boolean) => void
    space?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
    weight?: 
        | "regular"
        | "weak"
},
}
`;

exports[`Divider 1`] = `
{
  exportType: component,
  props: {
    weight?: 
        | "regular"
        | "strong"
},
}
`;

exports[`Drawer 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    closeLabel?: string
    data?: DataAttributeMap
    description?: ReactNodeNoStrings
    id: string
    onClose: (openState: false) => false | void
    open: boolean
    position?: 
        | "left"
        | "right"
    title: string
    width?: 
        | "large"
        | "medium"
        | "small"
},
}
`;

exports[`Dropdown 1`] = `
{
  exportType: component,
  props: {
    aria-describedby?: string
    aria-label: string
    aria-labelledby: string
    autoComplete?: string
    autoFocus?: boolean
    children: 
        | ValidDropdownChildren
        | ValidDropdownChildren[]
    data?: DataAttributeMap
    description?: ReactNode
    disabled?: boolean
    icon?: ReactNode
    id: string
    label: ReactNode
    message?: ReactNode
    name?: string
    onBlur?: FocusEventHandler<HTMLSelectElement>
    onChange: FormEventHandler<HTMLSelectElement>
    onFocus?: FocusEventHandler<HTMLSelectElement>
    placeholder?: string
    ref?: 
        | (instance: HTMLSelectElement | null) => void
        | RefObject<HTMLSelectElement>
        | string
    required?: boolean
    reserveMessageSpace?: boolean
    secondaryLabel?: ReactNode
    tertiaryLabel?: ReactNode
    tone?: 
        | "caution"
        | "critical"
        | "neutral"
        | "positive"
    value: 
        | number
        | readonly string[]
        | string
},
}
`;

exports[`FieldLabel 1`] = `
{
  exportType: component,
  props: {
    data?: DataAttributeMap
    description?: ReactNode
    descriptionId?: string
    disabled?: boolean
    htmlFor: 
        | false
        | string
    id?: string
    label?: ReactNode
    secondaryLabel?: ReactNode
    tertiaryLabel?: ReactNode
},
}
`;

exports[`FieldMessage 1`] = `
{
  exportType: component,
  props: {
    data?: DataAttributeMap
    disabled?: boolean
    id: string
    message: ReactNode
    reserveMessageSpace?: boolean
    secondaryMessage?: ReactNode
    tone?: 
        | "caution"
        | "critical"
        | "neutral"
        | "positive"
},
}
`;

exports[`Heading 1`] = `
{
  exportType: component,
  props: {
    align?: 
        | "center"
        | "left"
        | "right"
        | ResponsiveArray<1 | 2 | 3 | 4, "left" | "right" | "center" | null>
        | { mobile?: "left" | "right" | "center" | undefined; tablet?: "left" | "right" | "center" | undefined; desktop?: "left" | "right" | "center" | undefined; wide?: "left" | "right" | "center" | undefined; }
    children: ReactNode
    component?: 
        | "a"
        | "abbr"
        | "address"
        | "animate"
        | "animateMotion"
        | "animateTransform"
        | "area"
        | "article"
        | "aside"
        | "audio"
        | "b"
        | "base"
        | "bdi"
        | "bdo"
        | "big"
        | "blockquote"
        | "body"
        | "br"
        | "button"
        | "canvas"
        | "caption"
        | "center"
        | "circle"
        | "cite"
        | "clipPath"
        | "code"
        | "col"
        | "colgroup"
        | "data"
        | "datalist"
        | "dd"
        | "defs"
        | "del"
        | "desc"
        | "details"
        | "dfn"
        | "dialog"
        | "div"
        | "dl"
        | "dt"
        | "ellipse"
        | "em"
        | "embed"
        | "feBlend"
        | "feColorMatrix"
        | "feComponentTransfer"
        | "feComposite"
        | "feConvolveMatrix"
        | "feDiffuseLighting"
        | "feDisplacementMap"
        | "feDistantLight"
        | "feDropShadow"
        | "feFlood"
        | "feFuncA"
        | "feFuncB"
        | "feFuncG"
        | "feFuncR"
        | "feGaussianBlur"
        | "feImage"
        | "feMerge"
        | "feMergeNode"
        | "feMorphology"
        | "feOffset"
        | "fePointLight"
        | "feSpecularLighting"
        | "feSpotLight"
        | "feTile"
        | "feTurbulence"
        | "fieldset"
        | "figcaption"
        | "figure"
        | "filter"
        | "footer"
        | "foreignObject"
        | "form"
        | "g"
        | "h1"
        | "h2"
        | "h3"
        | "h4"
        | "h5"
        | "h6"
        | "head"
        | "header"
        | "hgroup"
        | "hr"
        | "html"
        | "i"
        | "iframe"
        | "image"
        | "img"
        | "input"
        | "ins"
        | "kbd"
        | "keygen"
        | "label"
        | "legend"
        | "li"
        | "line"
        | "linearGradient"
        | "link"
        | "main"
        | "map"
        | "mark"
        | "marker"
        | "mask"
        | "menu"
        | "menuitem"
        | "meta"
        | "metadata"
        | "meter"
        | "mpath"
        | "nav"
        | "noindex"
        | "noscript"
        | "object"
        | "ol"
        | "optgroup"
        | "option"
        | "output"
        | "p"
        | "param"
        | "path"
        | "pattern"
        | "picture"
        | "polygon"
        | "polyline"
        | "pre"
        | "progress"
        | "q"
        | "radialGradient"
        | "rect"
        | "rp"
        | "rt"
        | "ruby"
        | "s"
        | "samp"
        | "script"
        | "search"
        | "section"
        | "select"
        | "set"
        | "slot"
        | "small"
        | "source"
        | "span"
        | "stop"
        | "strong"
        | "style"
        | "sub"
        | "summary"
        | "sup"
        | "svg"
        | "switch"
        | "symbol"
        | "table"
        | "tbody"
        | "td"
        | "template"
        | "text"
        | "textPath"
        | "textarea"
        | "tfoot"
        | "th"
        | "thead"
        | "time"
        | "title"
        | "tr"
        | "track"
        | "tspan"
        | "u"
        | "ul"
        | "use"
        | "var"
        | "video"
        | "view"
        | "wbr"
        | "webview"
        | ComponentClass<any, any>
        | FunctionComponent<any>
    data?: DataAttributeMap
    icon?: ReactElement<UseIconProps, string | JSXElementConstructor<any>>
    id?: string
    level: 
        | "1"
        | "2"
        | "3"
        | "4"
    maxLines?: number
    truncate?: boolean
    weight?: 
        | "regular"
        | "weak"
},
}
`;

exports[`Hidden 1`] = `
{
  exportType: component,
  props: {
    above?: 
        | "desktop"
        | "mobile"
        | "tablet"
    below?: 
        | "desktop"
        | "tablet"
        | "wide"
    children: ReactNode
    component?: 
        | "a"
        | "abbr"
        | "address"
        | "animate"
        | "animateMotion"
        | "animateTransform"
        | "area"
        | "article"
        | "aside"
        | "audio"
        | "b"
        | "base"
        | "bdi"
        | "bdo"
        | "big"
        | "blockquote"
        | "body"
        | "br"
        | "button"
        | "canvas"
        | "caption"
        | "center"
        | "circle"
        | "cite"
        | "clipPath"
        | "code"
        | "col"
        | "colgroup"
        | "data"
        | "datalist"
        | "dd"
        | "defs"
        | "del"
        | "desc"
        | "details"
        | "dfn"
        | "dialog"
        | "div"
        | "dl"
        | "dt"
        | "ellipse"
        | "em"
        | "embed"
        | "feBlend"
        | "feColorMatrix"
        | "feComponentTransfer"
        | "feComposite"
        | "feConvolveMatrix"
        | "feDiffuseLighting"
        | "feDisplacementMap"
        | "feDistantLight"
        | "feDropShadow"
        | "feFlood"
        | "feFuncA"
        | "feFuncB"
        | "feFuncG"
        | "feFuncR"
        | "feGaussianBlur"
        | "feImage"
        | "feMerge"
        | "feMergeNode"
        | "feMorphology"
        | "feOffset"
        | "fePointLight"
        | "feSpecularLighting"
        | "feSpotLight"
        | "feTile"
        | "feTurbulence"
        | "fieldset"
        | "figcaption"
        | "figure"
        | "filter"
        | "footer"
        | "foreignObject"
        | "form"
        | "g"
        | "h1"
        | "h2"
        | "h3"
        | "h4"
        | "h5"
        | "h6"
        | "head"
        | "header"
        | "hgroup"
        | "hr"
        | "html"
        | "i"
        | "iframe"
        | "image"
        | "img"
        | "input"
        | "ins"
        | "kbd"
        | "keygen"
        | "label"
        | "legend"
        | "li"
        | "line"
        | "linearGradient"
        | "link"
        | "main"
        | "map"
        | "mark"
        | "marker"
        | "mask"
        | "menu"
        | "menuitem"
        | "meta"
        | "metadata"
        | "meter"
        | "mpath"
        | "nav"
        | "noindex"
        | "noscript"
        | "object"
        | "ol"
        | "optgroup"
        | "option"
        | "output"
        | "p"
        | "param"
        | "path"
        | "pattern"
        | "picture"
        | "polygon"
        | "polyline"
        | "pre"
        | "progress"
        | "q"
        | "radialGradient"
        | "rect"
        | "rp"
        | "rt"
        | "ruby"
        | "s"
        | "samp"
        | "script"
        | "search"
        | "section"
        | "select"
        | "set"
        | "slot"
        | "small"
        | "source"
        | "span"
        | "stop"
        | "strong"
        | "style"
        | "sub"
        | "summary"
        | "sup"
        | "svg"
        | "switch"
        | "symbol"
        | "table"
        | "tbody"
        | "td"
        | "template"
        | "text"
        | "textPath"
        | "textarea"
        | "tfoot"
        | "th"
        | "thead"
        | "time"
        | "title"
        | "tr"
        | "track"
        | "tspan"
        | "u"
        | "ul"
        | "use"
        | "var"
        | "video"
        | "view"
        | "wbr"
        | "webview"
        | ComponentClass<any, any>
        | FunctionComponent<any>
    data?: DataAttributeMap
    inline?: boolean
    print?: boolean
    screen?: boolean
},
}
`;

exports[`HiddenVisually 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    data?: DataAttributeMap
    id?: string
},
}
`;

exports[`IconAI 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconAdd 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconArrow 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    direction?: 
        | "down"
        | "left"
        | "right"
        | "up"
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconBookmark 1`] = `
{
  exportType: component,
  props: {
    active?: boolean
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconCareer 1`] = `
{
  exportType: component,
  props: {
    active?: boolean
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconCategory 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconCaution 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconChevron 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    direction?: 
        | "down"
        | "left"
        | "right"
        | "up"
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconClear 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconCompany 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconCompose 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconCopy 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconCreditCard 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconCritical 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconDate 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconDelete 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconDesktop 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconDocument 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconDocumentBroken 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconDownload 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconEdit 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconEducation 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconEnlarge 1`] = `
{
  exportType: component,
  props: {
    active?: boolean
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconExperience 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconFilter 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconFlag 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconGift 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconGlobe 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconGrid 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconHash 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconHeart 1`] = `
{
  exportType: component,
  props: {
    active?: boolean
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconHelp 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconHistory 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconHome 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconImage 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconInfo 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconInvoice 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconLanguage 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconLink 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconLinkBroken 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconList 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconLocation 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconMail 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconMessage 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconMinus 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconMobile 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconMoney 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconNewWindow 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconNote 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconNotification 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconOverflow 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconPeople 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconPersonAdd 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconPersonVerified 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconPhone 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconPlatformAndroid 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconPlatformApple 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconPositive 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconPrint 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconProfile 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconPromote 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconRecommended 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconRefresh 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconRenderer 1`] = `
{
  exportType: component,
  props: {
    children: ({ className }: { className: string; }) => ReactElement<any, string | JSXElementConstructor<any>> | null
},
}
`;

exports[`IconResume 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconRocket 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSearch 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSecurity 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSend 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSent 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSentiment 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    feeling?: 
        | "negative"
        | "neutral"
        | "positive"
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSettings 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconShare 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSkills 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSocialFacebook 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSocialGitHub 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSocialInstagram 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSocialLinkedIn 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSocialMedium 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSocialTwitter 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSocialX 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSocialYouTube 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSort 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconStar 1`] = `
{
  exportType: component,
  props: {
    active?: boolean
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconStatistics 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconSubCategory 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconTag 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconThumb 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    direction?: 
        | "down"
        | "up"
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconTick 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconTime 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconTip 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconUpload 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconVideo 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconVisibility 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    hidden?: boolean
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconWorkExperience 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconZoomIn 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`IconZoomOut 1`] = `
{
  exportType: component,
  props: {
    alignY?: 
        | "lowercase"
        | "uppercase"
    data?: DataAttributeMap
    size?: 
        | "fill"
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    title?: string
    titleId?: string
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
},
}
`;

exports[`Inline 1`] = `
{
  exportType: component,
  props: {
    align?: 
        | "center"
        | "left"
        | "right"
        | Partial<Record<"mobile" | "tablet" | "desktop" | "wide", Align>>
        | ResponsiveArray<1 | 2 | 3 | 4, Align | null>
    alignY?: 
        | "bottom"
        | "center"
        | "top"
        | Partial<Record<"mobile" | "tablet" | "desktop" | "wide", AlignY>>
        | ResponsiveArray<1 | 2 | 3 | 4, AlignY | null>
    children: ReactNodeNoStrings
    collapseBelow?: 
        | "desktop"
        | "tablet"
        | "wide"
    component?: 
        | "div"
        | "ol"
        | "span"
        | "ul"
    data?: DataAttributeMap
    reverse?: boolean
    space: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
},
}
`;

exports[`Link 1`] = `
{
  exportType: component,
  props: {
    about?: string
    accessKey?: string
    aria-activedescendant?: string
    aria-atomic?: 
        | "false"
        | "true"
        | false
        | true
    aria-autocomplete?: 
        | "both"
        | "inline"
        | "list"
        | "none"
    aria-braillelabel?: string
    aria-brailleroledescription?: string
    aria-busy?: 
        | "false"
        | "true"
        | false
        | true
    aria-checked?: 
        | "false"
        | "mixed"
        | "true"
        | false
        | true
    aria-colcount?: number
    aria-colindex?: number
    aria-colindextext?: string
    aria-colspan?: number
    aria-controls?: string
    aria-current?: 
        | "date"
        | "false"
        | "location"
        | "page"
        | "step"
        | "time"
        | "true"
        | false
        | true
    aria-describedby?: string
    aria-description?: string
    aria-details?: string
    aria-disabled?: 
        | "false"
        | "true"
        | false
        | true
    aria-dropeffect?: 
        | "copy"
        | "execute"
        | "link"
        | "move"
        | "none"
        | "popup"
    aria-errormessage?: string
    aria-expanded?: 
        | "false"
        | "true"
        | false
        | true
    aria-flowto?: string
    aria-grabbed?: 
        | "false"
        | "true"
        | false
        | true
    aria-haspopup?: 
        | "dialog"
        | "false"
        | "grid"
        | "listbox"
        | "menu"
        | "tree"
        | "true"
        | false
        | true
    aria-hidden?: 
        | "false"
        | "true"
        | false
        | true
    aria-invalid?: 
        | "false"
        | "grammar"
        | "spelling"
        | "true"
        | false
        | true
    aria-keyshortcuts?: string
    aria-label?: string
    aria-labelledby?: string
    aria-level?: number
    aria-live?: 
        | "assertive"
        | "off"
        | "polite"
    aria-modal?: 
        | "false"
        | "true"
        | false
        | true
    aria-multiline?: 
        | "false"
        | "true"
        | false
        | true
    aria-multiselectable?: 
        | "false"
        | "true"
        | false
        | true
    aria-orientation?: 
        | "horizontal"
        | "vertical"
    aria-owns?: string
    aria-placeholder?: string
    aria-posinset?: number
    aria-pressed?: 
        | "false"
        | "mixed"
        | "true"
        | false
        | true
    aria-readonly?: 
        | "false"
        | "true"
        | false
        | true
    aria-relevant?: 
        | "additions removals"
        | "additions text"
        | "additions"
        | "all"
        | "removals additions"
        | "removals text"
        | "removals"
        | "text additions"
        | "text removals"
        | "text"
    aria-required?: 
        | "false"
        | "true"
        | false
        | true
    aria-roledescription?: string
    aria-rowcount?: number
    aria-rowindex?: number
    aria-rowindextext?: string
    aria-rowspan?: number
    aria-selected?: 
        | "false"
        | "true"
        | false
        | true
    aria-setsize?: number
    aria-sort?: 
        | "ascending"
        | "descending"
        | "none"
        | "other"
    aria-valuemax?: number
    aria-valuemin?: number
    aria-valuenow?: number
    aria-valuetext?: string
    autoCapitalize?: string
    autoCorrect?: string
    autoFocus?: boolean
    autoSave?: string
    children?: ReactNode
    className?: ClassValue
    color?: string
    content?: string
    contentEditable?: 
        | "false"
        | "inherit"
        | "plaintext-only"
        | "true"
        | false
        | true
    contextMenu?: string
    dangerouslySetInnerHTML?: { __html: string | TrustedHTML; }
    data?: DataAttributeMap
    datatype?: string
    defaultChecked?: boolean
    defaultValue?: 
        | number
        | readonly string[]
        | string
    dir?: string
    download?: any
    draggable?: 
        | "false"
        | "true"
        | false
        | true
    hidden?: boolean
    href: string
    hrefLang?: string
    id?: string
    inlist?: any
    inputMode?: 
        | "decimal"
        | "email"
        | "none"
        | "numeric"
        | "search"
        | "tel"
        | "text"
        | "url"
    is?: string
    itemID?: string
    itemProp?: string
    itemRef?: string
    itemScope?: boolean
    itemType?: string
    lang?: string
    media?: string
    nonce?: string
    onAbort?: ReactEventHandler<HTMLAnchorElement>
    onAbortCapture?: ReactEventHandler<HTMLAnchorElement>
    onAnimationEnd?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationEndCapture?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationIteration?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationIterationCapture?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationStart?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationStartCapture?: AnimationEventHandler<HTMLAnchorElement>
    onAuxClick?: MouseEventHandler<HTMLAnchorElement>
    onAuxClickCapture?: MouseEventHandler<HTMLAnchorElement>
    onBeforeInput?: FormEventHandler<HTMLAnchorElement>
    onBeforeInputCapture?: FormEventHandler<HTMLAnchorElement>
    onBlur?: FocusEventHandler<HTMLAnchorElement>
    onBlurCapture?: FocusEventHandler<HTMLAnchorElement>
    onCanPlay?: ReactEventHandler<HTMLAnchorElement>
    onCanPlayCapture?: ReactEventHandler<HTMLAnchorElement>
    onCanPlayThrough?: ReactEventHandler<HTMLAnchorElement>
    onCanPlayThroughCapture?: ReactEventHandler<HTMLAnchorElement>
    onChange?: FormEventHandler<HTMLAnchorElement>
    onChangeCapture?: FormEventHandler<HTMLAnchorElement>
    onClick?: MouseEventHandler<HTMLAnchorElement>
    onClickCapture?: MouseEventHandler<HTMLAnchorElement>
    onCompositionEnd?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionEndCapture?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionStart?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionStartCapture?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionUpdate?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionUpdateCapture?: CompositionEventHandler<HTMLAnchorElement>
    onContextMenu?: MouseEventHandler<HTMLAnchorElement>
    onContextMenuCapture?: MouseEventHandler<HTMLAnchorElement>
    onCopy?: ClipboardEventHandler<HTMLAnchorElement>
    onCopyCapture?: ClipboardEventHandler<HTMLAnchorElement>
    onCut?: ClipboardEventHandler<HTMLAnchorElement>
    onCutCapture?: ClipboardEventHandler<HTMLAnchorElement>
    onDoubleClick?: MouseEventHandler<HTMLAnchorElement>
    onDoubleClickCapture?: MouseEventHandler<HTMLAnchorElement>
    onDrag?: DragEventHandler<HTMLAnchorElement>
    onDragCapture?: DragEventHandler<HTMLAnchorElement>
    onDragEnd?: DragEventHandler<HTMLAnchorElement>
    onDragEndCapture?: DragEventHandler<HTMLAnchorElement>
    onDragEnter?: DragEventHandler<HTMLAnchorElement>
    onDragEnterCapture?: DragEventHandler<HTMLAnchorElement>
    onDragExit?: DragEventHandler<HTMLAnchorElement>
    onDragExitCapture?: DragEventHandler<HTMLAnchorElement>
    onDragLeave?: DragEventHandler<HTMLAnchorElement>
    onDragLeaveCapture?: DragEventHandler<HTMLAnchorElement>
    onDragOver?: DragEventHandler<HTMLAnchorElement>
    onDragOverCapture?: DragEventHandler<HTMLAnchorElement>
    onDragStart?: DragEventHandler<HTMLAnchorElement>
    onDragStartCapture?: DragEventHandler<HTMLAnchorElement>
    onDrop?: DragEventHandler<HTMLAnchorElement>
    onDropCapture?: DragEventHandler<HTMLAnchorElement>
    onDurationChange?: ReactEventHandler<HTMLAnchorElement>
    onDurationChangeCapture?: ReactEventHandler<HTMLAnchorElement>
    onEmptied?: ReactEventHandler<HTMLAnchorElement>
    onEmptiedCapture?: ReactEventHandler<HTMLAnchorElement>
    onEncrypted?: ReactEventHandler<HTMLAnchorElement>
    onEncryptedCapture?: ReactEventHandler<HTMLAnchorElement>
    onEnded?: ReactEventHandler<HTMLAnchorElement>
    onEndedCapture?: ReactEventHandler<HTMLAnchorElement>
    onError?: ReactEventHandler<HTMLAnchorElement>
    onErrorCapture?: ReactEventHandler<HTMLAnchorElement>
    onFocus?: FocusEventHandler<HTMLAnchorElement>
    onFocusCapture?: FocusEventHandler<HTMLAnchorElement>
    onGotPointerCapture?: PointerEventHandler<HTMLAnchorElement>
    onGotPointerCaptureCapture?: PointerEventHandler<HTMLAnchorElement>
    onInput?: FormEventHandler<HTMLAnchorElement>
    onInputCapture?: FormEventHandler<HTMLAnchorElement>
    onInvalid?: FormEventHandler<HTMLAnchorElement>
    onInvalidCapture?: FormEventHandler<HTMLAnchorElement>
    onKeyDown?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyDownCapture?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyPress?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyPressCapture?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyUp?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyUpCapture?: KeyboardEventHandler<HTMLAnchorElement>
    onLoad?: ReactEventHandler<HTMLAnchorElement>
    onLoadCapture?: ReactEventHandler<HTMLAnchorElement>
    onLoadStart?: ReactEventHandler<HTMLAnchorElement>
    onLoadStartCapture?: ReactEventHandler<HTMLAnchorElement>
    onLoadedData?: ReactEventHandler<HTMLAnchorElement>
    onLoadedDataCapture?: ReactEventHandler<HTMLAnchorElement>
    onLoadedMetadata?: ReactEventHandler<HTMLAnchorElement>
    onLoadedMetadataCapture?: ReactEventHandler<HTMLAnchorElement>
    onLostPointerCapture?: PointerEventHandler<HTMLAnchorElement>
    onLostPointerCaptureCapture?: PointerEventHandler<HTMLAnchorElement>
    onMouseDown?: MouseEventHandler<HTMLAnchorElement>
    onMouseDownCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseEnter?: MouseEventHandler<HTMLAnchorElement>
    onMouseLeave?: MouseEventHandler<HTMLAnchorElement>
    onMouseMove?: MouseEventHandler<HTMLAnchorElement>
    onMouseMoveCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseOut?: MouseEventHandler<HTMLAnchorElement>
    onMouseOutCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseOver?: MouseEventHandler<HTMLAnchorElement>
    onMouseOverCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseUp?: MouseEventHandler<HTMLAnchorElement>
    onMouseUpCapture?: MouseEventHandler<HTMLAnchorElement>
    onPaste?: ClipboardEventHandler<HTMLAnchorElement>
    onPasteCapture?: ClipboardEventHandler<HTMLAnchorElement>
    onPause?: ReactEventHandler<HTMLAnchorElement>
    onPauseCapture?: ReactEventHandler<HTMLAnchorElement>
    onPlay?: ReactEventHandler<HTMLAnchorElement>
    onPlayCapture?: ReactEventHandler<HTMLAnchorElement>
    onPlaying?: ReactEventHandler<HTMLAnchorElement>
    onPlayingCapture?: ReactEventHandler<HTMLAnchorElement>
    onPointerCancel?: PointerEventHandler<HTMLAnchorElement>
    onPointerCancelCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerDown?: PointerEventHandler<HTMLAnchorElement>
    onPointerDownCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerEnter?: PointerEventHandler<HTMLAnchorElement>
    onPointerLeave?: PointerEventHandler<HTMLAnchorElement>
    onPointerMove?: PointerEventHandler<HTMLAnchorElement>
    onPointerMoveCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerOut?: PointerEventHandler<HTMLAnchorElement>
    onPointerOutCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerOver?: PointerEventHandler<HTMLAnchorElement>
    onPointerOverCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerUp?: PointerEventHandler<HTMLAnchorElement>
    onPointerUpCapture?: PointerEventHandler<HTMLAnchorElement>
    onProgress?: ReactEventHandler<HTMLAnchorElement>
    onProgressCapture?: ReactEventHandler<HTMLAnchorElement>
    onRateChange?: ReactEventHandler<HTMLAnchorElement>
    onRateChangeCapture?: ReactEventHandler<HTMLAnchorElement>
    onReset?: FormEventHandler<HTMLAnchorElement>
    onResetCapture?: FormEventHandler<HTMLAnchorElement>
    onResize?: ReactEventHandler<HTMLAnchorElement>
    onResizeCapture?: ReactEventHandler<HTMLAnchorElement>
    onScroll?: UIEventHandler<HTMLAnchorElement>
    onScrollCapture?: UIEventHandler<HTMLAnchorElement>
    onSeeked?: ReactEventHandler<HTMLAnchorElement>
    onSeekedCapture?: ReactEventHandler<HTMLAnchorElement>
    onSeeking?: ReactEventHandler<HTMLAnchorElement>
    onSeekingCapture?: ReactEventHandler<HTMLAnchorElement>
    onSelect?: ReactEventHandler<HTMLAnchorElement>
    onSelectCapture?: ReactEventHandler<HTMLAnchorElement>
    onStalled?: ReactEventHandler<HTMLAnchorElement>
    onStalledCapture?: ReactEventHandler<HTMLAnchorElement>
    onSubmit?: FormEventHandler<HTMLAnchorElement>
    onSubmitCapture?: FormEventHandler<HTMLAnchorElement>
    onSuspend?: ReactEventHandler<HTMLAnchorElement>
    onSuspendCapture?: ReactEventHandler<HTMLAnchorElement>
    onTimeUpdate?: ReactEventHandler<HTMLAnchorElement>
    onTimeUpdateCapture?: ReactEventHandler<HTMLAnchorElement>
    onTouchCancel?: TouchEventHandler<HTMLAnchorElement>
    onTouchCancelCapture?: TouchEventHandler<HTMLAnchorElement>
    onTouchEnd?: TouchEventHandler<HTMLAnchorElement>
    onTouchEndCapture?: TouchEventHandler<HTMLAnchorElement>
    onTouchMove?: TouchEventHandler<HTMLAnchorElement>
    onTouchMoveCapture?: TouchEventHandler<HTMLAnchorElement>
    onTouchStart?: TouchEventHandler<HTMLAnchorElement>
    onTouchStartCapture?: TouchEventHandler<HTMLAnchorElement>
    onTransitionEnd?: TransitionEventHandler<HTMLAnchorElement>
    onTransitionEndCapture?: TransitionEventHandler<HTMLAnchorElement>
    onVolumeChange?: ReactEventHandler<HTMLAnchorElement>
    onVolumeChangeCapture?: ReactEventHandler<HTMLAnchorElement>
    onWaiting?: ReactEventHandler<HTMLAnchorElement>
    onWaitingCapture?: ReactEventHandler<HTMLAnchorElement>
    onWheel?: WheelEventHandler<HTMLAnchorElement>
    onWheelCapture?: WheelEventHandler<HTMLAnchorElement>
    ping?: string
    prefix?: string
    property?: string
    radioGroup?: string
    ref?: 
        | (instance: HTMLAnchorElement | null) => void
        | RefObject<HTMLAnchorElement>
        | string
    referrerPolicy?: 
        | ""
        | "no-referrer"
        | "no-referrer-when-downgrade"
        | "origin"
        | "origin-when-cross-origin"
        | "same-origin"
        | "strict-origin"
        | "strict-origin-when-cross-origin"
        | "unsafe-url"
    rel?: string
    resource?: string
    results?: number
    rev?: string
    role?: 
        | "alert"
        | "alertdialog"
        | "application"
        | "article"
        | "banner"
        | "button"
        | "cell"
        | "checkbox"
        | "columnheader"
        | "combobox"
        | "complementary"
        | "contentinfo"
        | "definition"
        | "dialog"
        | "directory"
        | "document"
        | "feed"
        | "figure"
        | "form"
        | "grid"
        | "gridcell"
        | "group"
        | "heading"
        | "img"
        | "link"
        | "list"
        | "listbox"
        | "listitem"
        | "log"
        | "main"
        | "marquee"
        | "math"
        | "menu"
        | "menubar"
        | "menuitem"
        | "menuitemcheckbox"
        | "menuitemradio"
        | "navigation"
        | "none"
        | "note"
        | "option"
        | "presentation"
        | "progressbar"
        | "radio"
        | "radiogroup"
        | "region"
        | "row"
        | "rowgroup"
        | "rowheader"
        | "scrollbar"
        | "search"
        | "searchbox"
        | "separator"
        | "slider"
        | "spinbutton"
        | "status"
        | "switch"
        | "tab"
        | "table"
        | "tablist"
        | "tabpanel"
        | "term"
        | "textbox"
        | "timer"
        | "toolbar"
        | "tooltip"
        | "tree"
        | "treegrid"
        | "treeitem"
        | string & {}
    security?: string
    slot?: string
    spellCheck?: 
        | "false"
        | "true"
        | false
        | true
    style?: CSSProperties
    suppressContentEditableWarning?: boolean
    suppressHydrationWarning?: boolean
    tabIndex?: number
    target?: 
        | "_blank"
        | "_parent"
        | "_self"
        | "_top"
        | string & {}
    title?: string
    translate?: 
        | "no"
        | "yes"
    type?: string
    typeof?: string
    unselectable?: 
        | "off"
        | "on"
    vocab?: string
},
}
`;

exports[`LinkComponent 1`] = `
{
}
`;

exports[`List 1`] = `
{
  exportType: component,
  props: {
    children: ReactNodeNoStrings
    data?: DataAttributeMap
    icon?: ReactNode
    size?: 
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    space?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
    start?: number
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
    type?: 
        | "alpha"
        | "bullet"
        | "icon"
        | "number"
        | "roman"
},
}
`;

exports[`Loader 1`] = `
{
  exportType: component,
  props: {
    aria-label?: string
    data?: DataAttributeMap
    delayVisibility?: boolean
    size?: 
        | "large"
        | "small"
        | "standard"
        | "xsmall"
},
}
`;

exports[`MenuItem 1`] = `
{
  exportType: component,
  props: {
    badge?: ReactElement<BadgeProps, string | JSXElementConstructor<any>>
    children: ReactNode
    data?: DataAttributeMap
    icon?: ReactNode
    id?: string
    onClick?: () => void
    tone?: "critical"
},
}
`;

exports[`MenuItemCheckbox 1`] = `
{
  exportType: component,
  props: {
    badge?: ReactElement<BadgeProps, string | JSXElementConstructor<any>>
    checked: boolean
    children: ReactNode
    data?: DataAttributeMap
    id?: string
    onChange: (checked: boolean) => void
},
}
`;

exports[`MenuItemDivider 1`] = `
{
}
`;

exports[`MenuItemLink 1`] = `
{
  exportType: component,
  props: {
    badge?: ReactElement<BadgeProps, string | JSXElementConstructor<any>>
    children: ReactNode
    data?: DataAttributeMap
    href: string
    icon?: ReactNode
    id?: string
    onClick?: () => void
    rel?: string
    target?: 
        | "_blank"
        | "_parent"
        | "_self"
        | "_top"
        | string & {}
    tone?: "critical"
},
}
`;

exports[`MenuRenderer 1`] = `
{
  exportType: component,
  props: {
    align?: 
        | "left"
        | "right"
    children: ReactNode
    data?: DataAttributeMap
    offsetSpace?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
    onClose?: (closeReason: CloseReason) => void
    onOpen?: () => void
    placement?: 
        | "bottom"
        | "top"
    reserveIconSpace?: boolean
    trigger: (props: TriggerProps, state: TriggerState) => ReactNode
    width?: 
        | "content"
        | "large"
        | "medium"
        | "small"
},
}
`;

exports[`MonthPicker 1`] = `
{
  exportType: component,
  props: {
    aria-label: string
    aria-labelledby: string
    ascendingYears?: boolean
    data?: DataAttributeMap
    description?: ReactNode
    disabled?: boolean
    id: string
    label: ReactNode
    maxYear?: number
    message?: ReactNode
    minYear?: number
    monthLabel?: string
    monthNames?: MonthNames
    onBlur?: FocusHandler
    onChange: ChangeHandler
    onFocus?: FocusHandler
    required?: boolean
    reserveMessageSpace?: boolean
    secondaryLabel?: ReactNode
    tertiaryLabel?: ReactNode
    tone?: 
        | "caution"
        | "critical"
        | "neutral"
        | "positive"
    value: {
        month?: number
        year?: number
    }
    yearLabel?: string
},
}
`;

exports[`Notice 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    data?: DataAttributeMap
    tone?: 
        | "critical"
        | "info"
        | "positive"
        | "promote"
},
}
`;

exports[`OverflowMenu 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    data?: DataAttributeMap
    id?: string
    label: string
    onClose?: (closeReason: CloseReason) => void
    onOpen?: () => void
    placement?: 
        | "bottom"
        | "top"
    reserveIconSpace?: boolean
    width?: 
        | "content"
        | "large"
        | "medium"
        | "small"
},
}
`;

exports[`Page 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    data?: DataAttributeMap
    footer: ReactNode
    footerPosition?: "belowFold"
},
}
`;

exports[`PageBlock 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    component?: 
        | "article"
        | "aside"
        | "div"
        | "main"
        | "nav"
        | "section"
    data?: DataAttributeMap
    width?: 
        | "full"
        | "large"
        | "medium"
        | "small"
},
}
`;

exports[`Pagination 1`] = `
{
  exportType: component,
  props: {
    data?: DataAttributeMap
    label: string
    linkProps: ({ page, type, }: { page: number; type: "next" | "previous" | "pageNumber"; }) => LinkProps
    nextLabel?: string
    page: number
    pageLabel?: (page: number) => string
    pageLimit?: number
    previousLabel?: string
    total: number
},
}
`;

exports[`PasswordField 1`] = `
{
  exportType: component,
  props: {
    aria-describedby?: string
    aria-label: string
    aria-labelledby: string
    autoComplete?: string
    autoFocus?: boolean
    data?: DataAttributeMap
    description?: ReactNode
    disabled?: boolean
    id: string
    label: ReactNode
    message?: ReactNode
    name?: string
    onBlur?: FocusEventHandler<HTMLInputElement>
    onChange: FormEventHandler<HTMLInputElement>
    onFocus?: FocusEventHandler<HTMLInputElement>
    onVisibilityToggle?: (visible: boolean) => void
    placeholder?: string
    ref?: 
        | (instance: HTMLInputElement | null) => void
        | RefObject<HTMLInputElement>
        | string
    required?: boolean
    reserveMessageSpace?: boolean
    secondaryLabel?: ReactNode
    tertiaryLabel?: ReactNode
    tone?: 
        | "caution"
        | "critical"
        | "neutral"
        | "positive"
    value: 
        | number
        | readonly string[]
        | string
    visibilityToggleLabel?: string
},
}
`;

exports[`Radio 1`] = `
{
  exportType: component,
  props: {
    aria-describedby?: string
    badge?: ReactElement<BadgeProps, string | JSXElementConstructor<any>>
    checked: 
        | false
        | true
    children?: ReactNode
    data?: DataAttributeMap
    description?: ReactNode
    disabled?: boolean
    id: string
    label: ReactNode
    name?: string
    onChange: FormEventHandler<HTMLInputElement>
    ref?: 
        | (instance: HTMLInputElement | null) => void
        | RefObject<HTMLInputElement>
        | string
    tone?: 
        | "critical"
        | "neutral"
    value?: 
        | number
        | readonly string[]
        | string
},
}
`;

exports[`RadioGroup 1`] = `
{
  exportType: component,
  props: {
    aria-label: string
    aria-labelledby: string
    children: ReactElement<RadioItemProps, string | JSXElementConstructor<any>>[]
    data?: DataAttributeMap
    description?: ReactNode
    disabled?: boolean
    id: string
    label: ReactNode
    message?: ReactNode
    name?: string
    onChange: (event: FormEvent<HTMLInputElement>) => void
    required?: boolean
    reserveMessageSpace?: boolean
    secondaryLabel?: ReactNode
    size?: 
        | "small"
        | "standard"
    tertiaryLabel?: ReactNode
    tone?: 
        | "critical"
        | "neutral"
        | "positive"
    value: 
        | number
        | string
},
}
`;

exports[`RadioItem 1`] = `
{
  exportType: component,
  props: {
    aria-describedby?: string
    badge?: ReactElement<BadgeProps, string | JSXElementConstructor<any>>
    children?: ReactNode
    data?: DataAttributeMap
    description?: ReactNode
    disabled?: boolean
    label: ReactNode
    ref?: 
        | (instance: HTMLInputElement | null) => void
        | RefObject<HTMLInputElement>
        | string
    value: 
        | number
        | readonly string[]
        | string
},
}
`;

exports[`Rating 1`] = `
{
  exportType: component,
  props: {
    aria-label?: string
    data?: DataAttributeMap
    rating: number
    size?: 
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    variant?: 
        | "full"
        | "minimal"
        | "starsOnly"
    weight?: 
        | "medium"
        | "regular"
        | "strong"
},
}
`;

exports[`Secondary 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    data?: DataAttributeMap
    id?: string
},
}
`;

exports[`Spread 1`] = `
{
  exportType: component,
  props: {
    align?: 
        | "center"
        | "left"
        | "right"
        | Partial<Record<"mobile" | "tablet" | "desktop" | "wide", Align>>
        | ResponsiveArray<1 | 2 | 3 | 4, Align | null>
    alignY?: 
        | "bottom"
        | "center"
        | "top"
        | Partial<Record<"mobile" | "tablet" | "desktop" | "wide", AlignY>>
        | ResponsiveArray<1 | 2 | 3 | 4, AlignY | null>
    children: ReactNodeNoStrings
    component?: 
        | "a"
        | "abbr"
        | "address"
        | "animate"
        | "animateMotion"
        | "animateTransform"
        | "area"
        | "article"
        | "aside"
        | "audio"
        | "b"
        | "base"
        | "bdi"
        | "bdo"
        | "big"
        | "blockquote"
        | "body"
        | "br"
        | "button"
        | "canvas"
        | "caption"
        | "center"
        | "circle"
        | "cite"
        | "clipPath"
        | "code"
        | "col"
        | "colgroup"
        | "data"
        | "datalist"
        | "dd"
        | "defs"
        | "del"
        | "desc"
        | "details"
        | "dfn"
        | "dialog"
        | "div"
        | "dl"
        | "dt"
        | "ellipse"
        | "em"
        | "embed"
        | "feBlend"
        | "feColorMatrix"
        | "feComponentTransfer"
        | "feComposite"
        | "feConvolveMatrix"
        | "feDiffuseLighting"
        | "feDisplacementMap"
        | "feDistantLight"
        | "feDropShadow"
        | "feFlood"
        | "feFuncA"
        | "feFuncB"
        | "feFuncG"
        | "feFuncR"
        | "feGaussianBlur"
        | "feImage"
        | "feMerge"
        | "feMergeNode"
        | "feMorphology"
        | "feOffset"
        | "fePointLight"
        | "feSpecularLighting"
        | "feSpotLight"
        | "feTile"
        | "feTurbulence"
        | "fieldset"
        | "figcaption"
        | "figure"
        | "filter"
        | "footer"
        | "foreignObject"
        | "form"
        | "g"
        | "h1"
        | "h2"
        | "h3"
        | "h4"
        | "h5"
        | "h6"
        | "head"
        | "header"
        | "hgroup"
        | "hr"
        | "html"
        | "i"
        | "iframe"
        | "image"
        | "img"
        | "input"
        | "ins"
        | "kbd"
        | "keygen"
        | "label"
        | "legend"
        | "li"
        | "line"
        | "linearGradient"
        | "link"
        | "main"
        | "map"
        | "mark"
        | "marker"
        | "mask"
        | "menu"
        | "menuitem"
        | "meta"
        | "metadata"
        | "meter"
        | "mpath"
        | "nav"
        | "noindex"
        | "noscript"
        | "object"
        | "ol"
        | "optgroup"
        | "option"
        | "output"
        | "p"
        | "param"
        | "path"
        | "pattern"
        | "picture"
        | "polygon"
        | "polyline"
        | "pre"
        | "progress"
        | "q"
        | "radialGradient"
        | "rect"
        | "rp"
        | "rt"
        | "ruby"
        | "s"
        | "samp"
        | "script"
        | "search"
        | "section"
        | "select"
        | "set"
        | "slot"
        | "small"
        | "source"
        | "span"
        | "stop"
        | "strong"
        | "style"
        | "sub"
        | "summary"
        | "sup"
        | "svg"
        | "switch"
        | "symbol"
        | "table"
        | "tbody"
        | "td"
        | "template"
        | "text"
        | "textPath"
        | "textarea"
        | "tfoot"
        | "th"
        | "thead"
        | "time"
        | "title"
        | "tr"
        | "track"
        | "tspan"
        | "u"
        | "ul"
        | "use"
        | "var"
        | "video"
        | "view"
        | "wbr"
        | "webview"
        | ComponentClass<any, any>
        | FunctionComponent<any>
    data?: DataAttributeMap
    direction?: 
        | "horizontal"
        | "vertical"
    space: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
},
}
`;

exports[`Stack 1`] = `
{
  exportType: component,
  props: {
    align?: 
        | "center"
        | "left"
        | "right"
        | Partial<Record<"mobile" | "tablet" | "desktop" | "wide", Align>>
        | ResponsiveArray<1 | 2 | 3 | 4, Align | null>
    children: ReactNodeNoStrings
    component?: 
        | "div"
        | "ol"
        | "span"
        | "ul"
    data?: DataAttributeMap
    dividers?: 
        | "regular"
        | "strong"
        | false
        | true
    space: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
},
}
`;

exports[`Step 1`] = `
{
  exportType: component,
  props: {
    children: string
    complete?: boolean
    id?: 
        | number
        | string
},
}
`;

exports[`Stepper 1`] = `
{
  exportType: component,
  props: {
    activeStep?: number
    align?: 
        | "center"
        | "left"
    children: 
        | Step
        | Step[]
    data?: DataAttributeMap
    id?: string
    label: string
    mode?: 
        | "linear"
        | "non-linear"
    onStepClick?: (step: { id?: string | number | undefined; stepNumber: number; }) => void
    progress: number
    tone?: "neutral"
},
}
`;

exports[`Strong 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    data?: DataAttributeMap
    id?: string
},
}
`;

exports[`Tab 1`] = `
{
  exportType: component,
  props: {
    badge?: ReactElement<BadgeProps, string | JSXElementConstructor<any>>
    children: ReactNode
    data?: DataAttributeMap
    icon?: ReactElement<UseIconProps, string | JSXElementConstructor<any>>
    item?: string
},
}
`;

exports[`TabPanel 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    data?: DataAttributeMap
    item?: string
},
}
`;

exports[`TabPanels 1`] = `
{
  exportType: component,
  props: {
    children: ReactNodeNoStrings
    renderInactivePanels?: boolean
},
}
`;

exports[`Tabs 1`] = `
{
  exportType: component,
  props: {
    align?: 
        | "center"
        | "left"
    children: ReactNodeNoStrings
    data?: DataAttributeMap
    divider?: 
        | "full"
        | "minimal"
        | "none"
    gutter?: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
    label: string
    reserveHitArea?: boolean
    size?: 
        | "small"
        | "standard"
},
}
`;

exports[`TabsProvider 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
    id: string
    onChange?: (selectedIndex: number, selectedItem?: string | undefined) => void
    selectedItem?: string
},
}
`;

exports[`Tag 1`] = `
{
  exportType: component,
  props: {
    addLabel?: string
    children: string
    clearLabel?: string
    data?: DataAttributeMap
    icon?: ReactElement<UseIconProps, string | JSXElementConstructor<any>>
    id?: string
    onAdd?: MouseEventHandler<HTMLButtonElement>
    onClear?: MouseEventHandler<HTMLButtonElement>
    size?: 
        | "small"
        | "standard"
},
}
`;

exports[`Text 1`] = `
{
  exportType: component,
  props: {
    align?: 
        | "center"
        | "left"
        | "right"
        | ResponsiveArray<1 | 2 | 3 | 4, "left" | "right" | "center" | null>
        | { mobile?: "left" | "right" | "center" | undefined; tablet?: "left" | "right" | "center" | undefined; desktop?: "left" | "right" | "center" | undefined; wide?: "left" | "right" | "center" | undefined; }
    baseline?: boolean
    children?: ReactNode
    component?: 
        | "a"
        | "abbr"
        | "address"
        | "animate"
        | "animateMotion"
        | "animateTransform"
        | "area"
        | "article"
        | "aside"
        | "audio"
        | "b"
        | "base"
        | "bdi"
        | "bdo"
        | "big"
        | "blockquote"
        | "body"
        | "br"
        | "button"
        | "canvas"
        | "caption"
        | "center"
        | "circle"
        | "cite"
        | "clipPath"
        | "code"
        | "col"
        | "colgroup"
        | "data"
        | "datalist"
        | "dd"
        | "defs"
        | "del"
        | "desc"
        | "details"
        | "dfn"
        | "dialog"
        | "div"
        | "dl"
        | "dt"
        | "ellipse"
        | "em"
        | "embed"
        | "feBlend"
        | "feColorMatrix"
        | "feComponentTransfer"
        | "feComposite"
        | "feConvolveMatrix"
        | "feDiffuseLighting"
        | "feDisplacementMap"
        | "feDistantLight"
        | "feDropShadow"
        | "feFlood"
        | "feFuncA"
        | "feFuncB"
        | "feFuncG"
        | "feFuncR"
        | "feGaussianBlur"
        | "feImage"
        | "feMerge"
        | "feMergeNode"
        | "feMorphology"
        | "feOffset"
        | "fePointLight"
        | "feSpecularLighting"
        | "feSpotLight"
        | "feTile"
        | "feTurbulence"
        | "fieldset"
        | "figcaption"
        | "figure"
        | "filter"
        | "footer"
        | "foreignObject"
        | "form"
        | "g"
        | "h1"
        | "h2"
        | "h3"
        | "h4"
        | "h5"
        | "h6"
        | "head"
        | "header"
        | "hgroup"
        | "hr"
        | "html"
        | "i"
        | "iframe"
        | "image"
        | "img"
        | "input"
        | "ins"
        | "kbd"
        | "keygen"
        | "label"
        | "legend"
        | "li"
        | "line"
        | "linearGradient"
        | "link"
        | "main"
        | "map"
        | "mark"
        | "marker"
        | "mask"
        | "menu"
        | "menuitem"
        | "meta"
        | "metadata"
        | "meter"
        | "mpath"
        | "nav"
        | "noindex"
        | "noscript"
        | "object"
        | "ol"
        | "optgroup"
        | "option"
        | "output"
        | "p"
        | "param"
        | "path"
        | "pattern"
        | "picture"
        | "polygon"
        | "polyline"
        | "pre"
        | "progress"
        | "q"
        | "radialGradient"
        | "rect"
        | "rp"
        | "rt"
        | "ruby"
        | "s"
        | "samp"
        | "script"
        | "search"
        | "section"
        | "select"
        | "set"
        | "slot"
        | "small"
        | "source"
        | "span"
        | "stop"
        | "strong"
        | "style"
        | "sub"
        | "summary"
        | "sup"
        | "svg"
        | "switch"
        | "symbol"
        | "table"
        | "tbody"
        | "td"
        | "template"
        | "text"
        | "textPath"
        | "textarea"
        | "tfoot"
        | "th"
        | "thead"
        | "time"
        | "title"
        | "tr"
        | "track"
        | "tspan"
        | "u"
        | "ul"
        | "use"
        | "var"
        | "video"
        | "view"
        | "wbr"
        | "webview"
        | ComponentClass<any, any>
        | FunctionComponent<any>
    data?: DataAttributeMap
    icon?: ReactElement<UseIconProps, string | JSXElementConstructor<any>>
    id?: string
    maxLines?: number
    size?: 
        | "large"
        | "small"
        | "standard"
        | "xsmall"
    tone?: 
        | "brandAccent"
        | "caution"
        | "critical"
        | "formAccent"
        | "info"
        | "link"
        | "neutral"
        | "positive"
        | "promote"
        | "secondary"
    truncate?: boolean
    weight?: 
        | "medium"
        | "regular"
        | "strong"
},
}
`;

exports[`TextDropdown 1`] = `
{
  exportType: component,
  props: {
    data?: DataAttributeMap
    id: string
    label: string
    onBlur?: () => void
    onChange: (value: Value) => void
    options: TextDropdownValue<Value>[]
    value: NonNullable<Value>
},
}
`;

exports[`TextField 1`] = `
{
  exportType: component,
  props: {
    aria-describedby?: string
    aria-label: string
    aria-labelledby: string
    autoComplete?: string
    autoFocus?: boolean
    characterLimit?: number
    clearLabel?: string
    data?: DataAttributeMap
    description?: ReactNode
    disabled?: boolean
    icon?: ReactNode
    id: string
    inputMode?: 
        | "decimal"
        | "email"
        | "none"
        | "numeric"
        | "search"
        | "tel"
        | "text"
        | "url"
    label: ReactNode
    message?: ReactNode
    name?: string
    onBlur?: FocusEventHandler<HTMLInputElement>
    onChange: FormEventHandler<HTMLInputElement>
    onClear?: () => void
    onFocus?: FocusEventHandler<HTMLInputElement>
    placeholder?: string
    prefix?: string
    ref?: 
        | (instance: HTMLInputElement | null) => void
        | RefObject<HTMLInputElement>
        | string
    required?: boolean
    reserveMessageSpace?: boolean
    secondaryLabel?: ReactNode
    step?: 
        | number
        | string
    tertiaryLabel?: ReactNode
    tone?: 
        | "caution"
        | "critical"
        | "neutral"
        | "positive"
    type?: 
        | "email"
        | "number"
        | "password"
        | "search"
        | "tel"
        | "text"
        | "url"
    value: 
        | number
        | readonly string[]
        | string
},
}
`;

exports[`TextLink 1`] = `
{
  exportType: component,
  props: {
    about?: string
    accessKey?: string
    aria-activedescendant?: string
    aria-atomic?: 
        | "false"
        | "true"
        | false
        | true
    aria-autocomplete?: 
        | "both"
        | "inline"
        | "list"
        | "none"
    aria-braillelabel?: string
    aria-brailleroledescription?: string
    aria-busy?: 
        | "false"
        | "true"
        | false
        | true
    aria-checked?: 
        | "false"
        | "mixed"
        | "true"
        | false
        | true
    aria-colcount?: number
    aria-colindex?: number
    aria-colindextext?: string
    aria-colspan?: number
    aria-controls?: string
    aria-current?: 
        | "date"
        | "false"
        | "location"
        | "page"
        | "step"
        | "time"
        | "true"
        | false
        | true
    aria-describedby?: string
    aria-description?: string
    aria-details?: string
    aria-disabled?: 
        | "false"
        | "true"
        | false
        | true
    aria-dropeffect?: 
        | "copy"
        | "execute"
        | "link"
        | "move"
        | "none"
        | "popup"
    aria-errormessage?: string
    aria-expanded?: 
        | "false"
        | "true"
        | false
        | true
    aria-flowto?: string
    aria-grabbed?: 
        | "false"
        | "true"
        | false
        | true
    aria-haspopup?: 
        | "dialog"
        | "false"
        | "grid"
        | "listbox"
        | "menu"
        | "tree"
        | "true"
        | false
        | true
    aria-hidden?: 
        | "false"
        | "true"
        | false
        | true
    aria-invalid?: 
        | "false"
        | "grammar"
        | "spelling"
        | "true"
        | false
        | true
    aria-keyshortcuts?: string
    aria-label?: string
    aria-labelledby?: string
    aria-level?: number
    aria-live?: 
        | "assertive"
        | "off"
        | "polite"
    aria-modal?: 
        | "false"
        | "true"
        | false
        | true
    aria-multiline?: 
        | "false"
        | "true"
        | false
        | true
    aria-multiselectable?: 
        | "false"
        | "true"
        | false
        | true
    aria-orientation?: 
        | "horizontal"
        | "vertical"
    aria-owns?: string
    aria-placeholder?: string
    aria-posinset?: number
    aria-pressed?: 
        | "false"
        | "mixed"
        | "true"
        | false
        | true
    aria-readonly?: 
        | "false"
        | "true"
        | false
        | true
    aria-relevant?: 
        | "additions removals"
        | "additions text"
        | "additions"
        | "all"
        | "removals additions"
        | "removals text"
        | "removals"
        | "text additions"
        | "text removals"
        | "text"
    aria-required?: 
        | "false"
        | "true"
        | false
        | true
    aria-roledescription?: string
    aria-rowcount?: number
    aria-rowindex?: number
    aria-rowindextext?: string
    aria-rowspan?: number
    aria-selected?: 
        | "false"
        | "true"
        | false
        | true
    aria-setsize?: number
    aria-sort?: 
        | "ascending"
        | "descending"
        | "none"
        | "other"
    aria-valuemax?: number
    aria-valuemin?: number
    aria-valuenow?: number
    aria-valuetext?: string
    autoCapitalize?: string
    autoCorrect?: string
    autoFocus?: boolean
    autoSave?: string
    children?: ReactNode
    color?: string
    content?: string
    contentEditable?: 
        | "false"
        | "inherit"
        | "plaintext-only"
        | "true"
        | false
        | true
    contextMenu?: string
    dangerouslySetInnerHTML?: { __html: string | TrustedHTML; }
    data?: DataAttributeMap
    datatype?: string
    defaultChecked?: boolean
    defaultValue?: 
        | number
        | readonly string[]
        | string
    dir?: string
    download?: any
    draggable?: 
        | "false"
        | "true"
        | false
        | true
    hidden?: boolean
    hitArea?: 
        | "large"
        | "standard"
    href: string
    hrefLang?: string
    icon?: ReactElement<UseIconProps, string | JSXElementConstructor<any>>
    iconPosition?: 
        | "leading"
        | "trailing"
    id?: string
    inlist?: any
    inputMode?: 
        | "decimal"
        | "email"
        | "none"
        | "numeric"
        | "search"
        | "tel"
        | "text"
        | "url"
    is?: string
    itemID?: string
    itemProp?: string
    itemRef?: string
    itemScope?: boolean
    itemType?: string
    lang?: string
    media?: string
    nonce?: string
    onAbort?: ReactEventHandler<HTMLAnchorElement>
    onAbortCapture?: ReactEventHandler<HTMLAnchorElement>
    onAnimationEnd?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationEndCapture?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationIteration?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationIterationCapture?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationStart?: AnimationEventHandler<HTMLAnchorElement>
    onAnimationStartCapture?: AnimationEventHandler<HTMLAnchorElement>
    onAuxClick?: MouseEventHandler<HTMLAnchorElement>
    onAuxClickCapture?: MouseEventHandler<HTMLAnchorElement>
    onBeforeInput?: FormEventHandler<HTMLAnchorElement>
    onBeforeInputCapture?: FormEventHandler<HTMLAnchorElement>
    onBlur?: FocusEventHandler<HTMLAnchorElement>
    onBlurCapture?: FocusEventHandler<HTMLAnchorElement>
    onCanPlay?: ReactEventHandler<HTMLAnchorElement>
    onCanPlayCapture?: ReactEventHandler<HTMLAnchorElement>
    onCanPlayThrough?: ReactEventHandler<HTMLAnchorElement>
    onCanPlayThroughCapture?: ReactEventHandler<HTMLAnchorElement>
    onChange?: FormEventHandler<HTMLAnchorElement>
    onChangeCapture?: FormEventHandler<HTMLAnchorElement>
    onClick?: MouseEventHandler<HTMLAnchorElement>
    onClickCapture?: MouseEventHandler<HTMLAnchorElement>
    onCompositionEnd?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionEndCapture?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionStart?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionStartCapture?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionUpdate?: CompositionEventHandler<HTMLAnchorElement>
    onCompositionUpdateCapture?: CompositionEventHandler<HTMLAnchorElement>
    onContextMenu?: MouseEventHandler<HTMLAnchorElement>
    onContextMenuCapture?: MouseEventHandler<HTMLAnchorElement>
    onCopy?: ClipboardEventHandler<HTMLAnchorElement>
    onCopyCapture?: ClipboardEventHandler<HTMLAnchorElement>
    onCut?: ClipboardEventHandler<HTMLAnchorElement>
    onCutCapture?: ClipboardEventHandler<HTMLAnchorElement>
    onDoubleClick?: MouseEventHandler<HTMLAnchorElement>
    onDoubleClickCapture?: MouseEventHandler<HTMLAnchorElement>
    onDrag?: DragEventHandler<HTMLAnchorElement>
    onDragCapture?: DragEventHandler<HTMLAnchorElement>
    onDragEnd?: DragEventHandler<HTMLAnchorElement>
    onDragEndCapture?: DragEventHandler<HTMLAnchorElement>
    onDragEnter?: DragEventHandler<HTMLAnchorElement>
    onDragEnterCapture?: DragEventHandler<HTMLAnchorElement>
    onDragExit?: DragEventHandler<HTMLAnchorElement>
    onDragExitCapture?: DragEventHandler<HTMLAnchorElement>
    onDragLeave?: DragEventHandler<HTMLAnchorElement>
    onDragLeaveCapture?: DragEventHandler<HTMLAnchorElement>
    onDragOver?: DragEventHandler<HTMLAnchorElement>
    onDragOverCapture?: DragEventHandler<HTMLAnchorElement>
    onDragStart?: DragEventHandler<HTMLAnchorElement>
    onDragStartCapture?: DragEventHandler<HTMLAnchorElement>
    onDrop?: DragEventHandler<HTMLAnchorElement>
    onDropCapture?: DragEventHandler<HTMLAnchorElement>
    onDurationChange?: ReactEventHandler<HTMLAnchorElement>
    onDurationChangeCapture?: ReactEventHandler<HTMLAnchorElement>
    onEmptied?: ReactEventHandler<HTMLAnchorElement>
    onEmptiedCapture?: ReactEventHandler<HTMLAnchorElement>
    onEncrypted?: ReactEventHandler<HTMLAnchorElement>
    onEncryptedCapture?: ReactEventHandler<HTMLAnchorElement>
    onEnded?: ReactEventHandler<HTMLAnchorElement>
    onEndedCapture?: ReactEventHandler<HTMLAnchorElement>
    onError?: ReactEventHandler<HTMLAnchorElement>
    onErrorCapture?: ReactEventHandler<HTMLAnchorElement>
    onFocus?: FocusEventHandler<HTMLAnchorElement>
    onFocusCapture?: FocusEventHandler<HTMLAnchorElement>
    onGotPointerCapture?: PointerEventHandler<HTMLAnchorElement>
    onGotPointerCaptureCapture?: PointerEventHandler<HTMLAnchorElement>
    onInput?: FormEventHandler<HTMLAnchorElement>
    onInputCapture?: FormEventHandler<HTMLAnchorElement>
    onInvalid?: FormEventHandler<HTMLAnchorElement>
    onInvalidCapture?: FormEventHandler<HTMLAnchorElement>
    onKeyDown?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyDownCapture?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyPress?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyPressCapture?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyUp?: KeyboardEventHandler<HTMLAnchorElement>
    onKeyUpCapture?: KeyboardEventHandler<HTMLAnchorElement>
    onLoad?: ReactEventHandler<HTMLAnchorElement>
    onLoadCapture?: ReactEventHandler<HTMLAnchorElement>
    onLoadStart?: ReactEventHandler<HTMLAnchorElement>
    onLoadStartCapture?: ReactEventHandler<HTMLAnchorElement>
    onLoadedData?: ReactEventHandler<HTMLAnchorElement>
    onLoadedDataCapture?: ReactEventHandler<HTMLAnchorElement>
    onLoadedMetadata?: ReactEventHandler<HTMLAnchorElement>
    onLoadedMetadataCapture?: ReactEventHandler<HTMLAnchorElement>
    onLostPointerCapture?: PointerEventHandler<HTMLAnchorElement>
    onLostPointerCaptureCapture?: PointerEventHandler<HTMLAnchorElement>
    onMouseDown?: MouseEventHandler<HTMLAnchorElement>
    onMouseDownCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseEnter?: MouseEventHandler<HTMLAnchorElement>
    onMouseLeave?: MouseEventHandler<HTMLAnchorElement>
    onMouseMove?: MouseEventHandler<HTMLAnchorElement>
    onMouseMoveCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseOut?: MouseEventHandler<HTMLAnchorElement>
    onMouseOutCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseOver?: MouseEventHandler<HTMLAnchorElement>
    onMouseOverCapture?: MouseEventHandler<HTMLAnchorElement>
    onMouseUp?: MouseEventHandler<HTMLAnchorElement>
    onMouseUpCapture?: MouseEventHandler<HTMLAnchorElement>
    onPaste?: ClipboardEventHandler<HTMLAnchorElement>
    onPasteCapture?: ClipboardEventHandler<HTMLAnchorElement>
    onPause?: ReactEventHandler<HTMLAnchorElement>
    onPauseCapture?: ReactEventHandler<HTMLAnchorElement>
    onPlay?: ReactEventHandler<HTMLAnchorElement>
    onPlayCapture?: ReactEventHandler<HTMLAnchorElement>
    onPlaying?: ReactEventHandler<HTMLAnchorElement>
    onPlayingCapture?: ReactEventHandler<HTMLAnchorElement>
    onPointerCancel?: PointerEventHandler<HTMLAnchorElement>
    onPointerCancelCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerDown?: PointerEventHandler<HTMLAnchorElement>
    onPointerDownCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerEnter?: PointerEventHandler<HTMLAnchorElement>
    onPointerLeave?: PointerEventHandler<HTMLAnchorElement>
    onPointerMove?: PointerEventHandler<HTMLAnchorElement>
    onPointerMoveCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerOut?: PointerEventHandler<HTMLAnchorElement>
    onPointerOutCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerOver?: PointerEventHandler<HTMLAnchorElement>
    onPointerOverCapture?: PointerEventHandler<HTMLAnchorElement>
    onPointerUp?: PointerEventHandler<HTMLAnchorElement>
    onPointerUpCapture?: PointerEventHandler<HTMLAnchorElement>
    onProgress?: ReactEventHandler<HTMLAnchorElement>
    onProgressCapture?: ReactEventHandler<HTMLAnchorElement>
    onRateChange?: ReactEventHandler<HTMLAnchorElement>
    onRateChangeCapture?: ReactEventHandler<HTMLAnchorElement>
    onReset?: FormEventHandler<HTMLAnchorElement>
    onResetCapture?: FormEventHandler<HTMLAnchorElement>
    onResize?: ReactEventHandler<HTMLAnchorElement>
    onResizeCapture?: ReactEventHandler<HTMLAnchorElement>
    onScroll?: UIEventHandler<HTMLAnchorElement>
    onScrollCapture?: UIEventHandler<HTMLAnchorElement>
    onSeeked?: ReactEventHandler<HTMLAnchorElement>
    onSeekedCapture?: ReactEventHandler<HTMLAnchorElement>
    onSeeking?: ReactEventHandler<HTMLAnchorElement>
    onSeekingCapture?: ReactEventHandler<HTMLAnchorElement>
    onSelect?: ReactEventHandler<HTMLAnchorElement>
    onSelectCapture?: ReactEventHandler<HTMLAnchorElement>
    onStalled?: ReactEventHandler<HTMLAnchorElement>
    onStalledCapture?: ReactEventHandler<HTMLAnchorElement>
    onSubmit?: FormEventHandler<HTMLAnchorElement>
    onSubmitCapture?: FormEventHandler<HTMLAnchorElement>
    onSuspend?: ReactEventHandler<HTMLAnchorElement>
    onSuspendCapture?: ReactEventHandler<HTMLAnchorElement>
    onTimeUpdate?: ReactEventHandler<HTMLAnchorElement>
    onTimeUpdateCapture?: ReactEventHandler<HTMLAnchorElement>
    onTouchCancel?: TouchEventHandler<HTMLAnchorElement>
    onTouchCancelCapture?: TouchEventHandler<HTMLAnchorElement>
    onTouchEnd?: TouchEventHandler<HTMLAnchorElement>
    onTouchEndCapture?: TouchEventHandler<HTMLAnchorElement>
    onTouchMove?: TouchEventHandler<HTMLAnchorElement>
    onTouchMoveCapture?: TouchEventHandler<HTMLAnchorElement>
    onTouchStart?: TouchEventHandler<HTMLAnchorElement>
    onTouchStartCapture?: TouchEventHandler<HTMLAnchorElement>
    onTransitionEnd?: TransitionEventHandler<HTMLAnchorElement>
    onTransitionEndCapture?: TransitionEventHandler<HTMLAnchorElement>
    onVolumeChange?: ReactEventHandler<HTMLAnchorElement>
    onVolumeChangeCapture?: ReactEventHandler<HTMLAnchorElement>
    onWaiting?: ReactEventHandler<HTMLAnchorElement>
    onWaitingCapture?: ReactEventHandler<HTMLAnchorElement>
    onWheel?: WheelEventHandler<HTMLAnchorElement>
    onWheelCapture?: WheelEventHandler<HTMLAnchorElement>
    ping?: string
    prefix?: string
    property?: string
    radioGroup?: string
    ref?: 
        | (instance: HTMLAnchorElement | null) => void
        | RefObject<HTMLAnchorElement>
        | string
    referrerPolicy?: 
        | ""
        | "no-referrer"
        | "no-referrer-when-downgrade"
        | "origin"
        | "origin-when-cross-origin"
        | "same-origin"
        | "strict-origin"
        | "strict-origin-when-cross-origin"
        | "unsafe-url"
    rel?: string
    resource?: string
    results?: number
    rev?: string
    role?: 
        | "alert"
        | "alertdialog"
        | "application"
        | "article"
        | "banner"
        | "button"
        | "cell"
        | "checkbox"
        | "columnheader"
        | "combobox"
        | "complementary"
        | "contentinfo"
        | "definition"
        | "dialog"
        | "directory"
        | "document"
        | "feed"
        | "figure"
        | "form"
        | "grid"
        | "gridcell"
        | "group"
        | "heading"
        | "img"
        | "link"
        | "list"
        | "listbox"
        | "listitem"
        | "log"
        | "main"
        | "marquee"
        | "math"
        | "menu"
        | "menubar"
        | "menuitem"
        | "menuitemcheckbox"
        | "menuitemradio"
        | "navigation"
        | "none"
        | "note"
        | "option"
        | "presentation"
        | "progressbar"
        | "radio"
        | "radiogroup"
        | "region"
        | "row"
        | "rowgroup"
        | "rowheader"
        | "scrollbar"
        | "search"
        | "searchbox"
        | "separator"
        | "slider"
        | "spinbutton"
        | "status"
        | "switch"
        | "tab"
        | "table"
        | "tablist"
        | "tabpanel"
        | "term"
        | "textbox"
        | "timer"
        | "toolbar"
        | "tooltip"
        | "tree"
        | "treegrid"
        | "treeitem"
        | string & {}
    security?: string
    showVisited?: boolean
    slot?: string
    spellCheck?: 
        | "false"
        | "true"
        | false
        | true
    suppressContentEditableWarning?: boolean
    suppressHydrationWarning?: boolean
    tabIndex?: number
    target?: 
        | "_blank"
        | "_parent"
        | "_self"
        | "_top"
        | string & {}
    title?: string
    translate?: 
        | "no"
        | "yes"
    type?: string
    typeof?: string
    unselectable?: 
        | "off"
        | "on"
    vocab?: string
    weight?: 
        | "regular"
        | "weak"
},
}
`;

exports[`TextLinkButton 1`] = `
{
  exportType: component,
  props: {
    aria-controls?: string
    aria-describedby?: string
    aria-expanded?: 
        | "false"
        | "true"
        | false
        | true
    aria-label?: string
    children: ReactNode
    data?: DataAttributeMap
    hitArea?: 
        | "large"
        | "standard"
    icon?: ReactElement<UseIconProps, string | JSXElementConstructor<any>>
    iconPosition?: 
        | "leading"
        | "trailing"
    id?: string
    onClick?: MouseEventHandler<HTMLSpanElement>
    tabIndex?: number
    weight?: 
        | "regular"
        | "weak"
},
}
`;

exports[`Textarea 1`] = `
{
  exportType: component,
  props: {
    aria-describedby?: string
    aria-label: string
    aria-labelledby: string
    autoComplete?: string
    autoFocus?: boolean
    characterLimit?: number
    data?: DataAttributeMap
    description?: ReactNode
    disabled?: boolean
    grow?: boolean
    highlightRanges?: { start: number; end?: number | undefined; }[]
    id: string
    label: ReactNode
    lineLimit?: number
    lines?: number
    message?: ReactNode
    name?: string
    onBlur?: FocusEventHandler<HTMLTextAreaElement>
    onChange: FormEventHandler<HTMLTextAreaElement>
    onFocus?: FocusEventHandler<HTMLTextAreaElement>
    onPaste?: ClipboardEventHandler<HTMLTextAreaElement>
    placeholder?: string
    ref?: 
        | (instance: HTMLTextAreaElement | null) => void
        | RefObject<HTMLTextAreaElement>
        | string
    required?: boolean
    reserveMessageSpace?: boolean
    secondaryLabel?: ReactNode
    spellCheck?: 
        | "false"
        | "true"
        | false
        | true
    tertiaryLabel?: ReactNode
    tone?: 
        | "caution"
        | "critical"
        | "neutral"
        | "positive"
    value: 
        | number
        | readonly string[]
        | string
},
}
`;

exports[`ThemeNameConsumer 1`] = `
{
  exportType: component,
  props: {
    children: (name: string) => ReactElement<any, string | JSXElementConstructor<any>>
},
}
`;

exports[`Tiles 1`] = `
{
  exportType: component,
  props: {
    children: ReactNodeNoStrings
    columns: 
        | 1
        | 2
        | 3
        | 4
        | 5
        | 6
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", 1 | 2 | 3 | 4 | 5 | 6>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, 1 | 2 | 3 | 4 | 5 | 6 | null>
    data?: DataAttributeMap
    dividers?: 
        | "regular"
        | "strong"
        | false
        | true
    space: 
        | "gutter"
        | "large"
        | "medium"
        | "none"
        | "small"
        | "xlarge"
        | "xsmall"
        | "xxlarge"
        | "xxsmall"
        | "xxxlarge"
        | RequiredConditionalObject<"mobile", "tablet" | "desktop" | "wide", Space>
        | RequiredResponsiveArray<1 | 2 | 3 | 4, Space | null>
},
}
`;

exports[`ToastProvider 1`] = `
{
  exportType: component,
  props: {
    children: ReactNode
},
}
`;

exports[`Toggle 1`] = `
{
  exportType: component,
  props: {
    align?: 
        | "justify"
        | "left"
        | "right"
    bleedY?: boolean
    data?: DataAttributeMap
    id: string
    label: ReactNode
    on: boolean
    onChange: ChangeHandler
    ref?: 
        | (instance: HTMLInputElement | null) => void
        | RefObject<HTMLInputElement>
        | string
    size?: 
        | "small"
        | "standard"
    togglePosition?: 
        | "leading"
        | "trailing"
},
}
`;

exports[`TooltipRenderer 1`] = `
{
  exportType: component,
  props: {
    children: (renderProps: { triggerProps: TriggerProps; }) => ReactNode
    id: string
    placement?: 
        | "bottom"
        | "top"
    tooltip: ReactNodeNoStrings
},
}
`;

exports[`filterSuggestions 1`] = `
{
  exportType: component,
  props: {
    at: (index: number) => FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value> | undefined
    concat: { (...items: ConcatArray<FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>>[]): (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]; (...items: (FilterableSuggestion<...> | ... 1 more ... | ConcatArray<...>)[]): (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]; }
    copyWithin: (target: number, start: number, end?: number | undefined) => FilterableSuggestions<Value>
    entries: () => IterableIterator<[number, FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>]>
    every: { <S extends FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>>(predicate: (value: FilterableSuggestion<Value> | FilterableGroupedSuggestions<...>, index: number, array: (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]) => value is S, thisArg?: any): this is S[]; (predicate: (value: ...
    fill: (value: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, start?: number | undefined, end?: number | undefined) => FilterableSuggestions<...>
    filter: { <S extends FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>>(predicate: (value: FilterableSuggestion<Value> | FilterableGroupedSuggestions<...>, index: number, array: (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]) => value is S, thisArg?: any): S[]; (predicate: (value: Filterab...
    find: { <S extends FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>>(predicate: (value: FilterableSuggestion<Value> | FilterableGroupedSuggestions<...>, index: number, obj: (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]) => value is S, thisArg?: any): S | undefined; (predicate: (value: ...
    findIndex: (predicate: (value: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, index: number, obj: (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]) => unknown, thisArg?: any) => number
    flat: <A, D extends number = 1>(this: A, depth?: D | undefined) => FlatArray<A, D>[]
    flatMap: <U, This = undefined>(callback: (this: This, value: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, index: number, array: (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]) => U | readonly U[], thisArg?: This | undefined) => U[]
    forEach: (callbackfn: (value: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, index: number, array: (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]) => void, thisArg?: any) => void
    includes: (searchElement: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, fromIndex?: number | undefined) => boolean
    indexOf: (searchElement: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, fromIndex?: number | undefined) => number
    join: (separator?: string | undefined) => string
    keys: () => IterableIterator<number>
    lastIndexOf: (searchElement: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, fromIndex?: number | undefined) => number
    length: number
    map: <U>(callbackfn: (value: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, index: number, array: (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]) => U, thisArg?: any) => U[]
    pop: () => FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value> | undefined
    push: (...items: (FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>)[]) => number
    reduce: { (callbackfn: (previousValue: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, currentValue: FilterableSuggestion<Value> | FilterableGroupedSuggestions<...>, currentIndex: number, array: (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]) => FilterableSuggestion<...> | FilterableGro...
    reduceRight: { (callbackfn: (previousValue: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, currentValue: FilterableSuggestion<Value> | FilterableGroupedSuggestions<...>, currentIndex: number, array: (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]) => FilterableSuggestion<...> | FilterableGro...
    reverse: () => (FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>)[]
    shift: () => FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value> | undefined
    slice: (start?: number | undefined, end?: number | undefined) => (FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>)[]
    some: (predicate: (value: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, index: number, array: (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]) => unknown, thisArg?: any) => boolean
    sort: (compareFn?: ((a: FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>, b: FilterableSuggestion<Value> | FilterableGroupedSuggestions<...>) => number) | undefined) => FilterableSuggestions<...>
    splice: { (start: number, deleteCount?: number | undefined): (FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>)[]; (start: number, deleteCount: number, ...items: (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]): (FilterableSuggestion<...> | FilterableGroupedSuggestions<...>)[]; }
    toLocaleString: { (): string; (locales: string | string[], options?: (NumberFormatOptions & DateTimeFormatOptions) | undefined): string; }
    toString: () => string
    unshift: (...items: (FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>)[]) => number
    values: () => IterableIterator<FilterableSuggestion<Value> | FilterableGroupedSuggestions<Value>>
},
}
`;

exports[`makeLinkComponent 1`] = `
{
  exportType: component,
  props: {
    defaultProps?: never
    displayName?: string
    propTypes?: never
},
}
`;

exports[`useColor 1`] = `
{
  exportType: hook,
  params: [],
  returnType: { foreground: { brandAccentLight: string; brandAccent: string; cautionLight: string; caution: string; criticalLight: string; critical: string; formAccentLight: string; formAccent: string; infoLight: string; ... 14 more ...; secondaryInverted: string; }; background: { ...; }; },
}
`;

exports[`useResponsiveValue 1`] = `
{
  exportType: hook,
  params: [],
  returnType: <Value>(value: RequiredResponsiveObject<Value>) => Value | null,
}
`;

exports[`useSpace 1`] = `
{
  exportType: hook,
  params: [],
  returnType: { grid: number; space: { gutter: number; xxsmall: number; xsmall: number; small: number; medium: number; large: number; xlarge: number; xxlarge: number; xxxlarge: number; }; },
}
`;

exports[`useThemeName 1`] = `
{
  exportType: hook,
  params: [],
  returnType: string,
}
`;

exports[`useToast 1`] = `
{
  exportType: hook,
  params: [],
  returnType: (toast: Toast) => void,
}
`;
